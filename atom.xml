<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CHILAM</title>
  
  <subtitle>多读书，多看报，少吃零食，多睡觉</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://chilam.me/"/>
  <updated>2018-06-30T10:26:54.160Z</updated>
  <id>http://chilam.me/</id>
  
  <author>
    <name>CHILAM</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>3.mysql-sql</title>
    <link href="http://chilam.me/2018/06/26/mysql-2/"/>
    <id>http://chilam.me/2018/06/26/mysql-2/</id>
    <published>2018-06-26T11:08:48.000Z</published>
    <updated>2018-06-30T10:26:54.160Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SQL语句主要分类可以划分为3个类别："><a href="#SQL语句主要分类可以划分为3个类别：" class="headerlink" title="SQL语句主要分类可以划分为3个类别："></a>SQL语句主要分类可以划分为3个类别：</h2><h3 id="DDL-Data-Definition-Languages"><a href="#DDL-Data-Definition-Languages" class="headerlink" title="DDL(Data Definition Languages)"></a>DDL(Data Definition Languages)</h3><p>数据定义语言，定义了不同的数据段，数据库，表，列，索引等数据库对象的定义，常用的关键字主要包括create,drop,alter等。</p><h3 id="Data-Manipulation-Languages"><a href="#Data-Manipulation-Languages" class="headerlink" title="Data Manipulation Languages"></a>Data Manipulation Languages</h3><p>DML数据操作语句，用于添加，删除，更新和查询数据库记录，并检查数据完整性，常用的语句关键字有insert,update,delete,select。</p><h3 id="DCL-Data-Control-Languages"><a href="#DCL-Data-Control-Languages" class="headerlink" title="DCL(Data Control Languages)"></a>DCL(Data Control Languages)</h3><p>数据控制语句，用于控制不同数据段直接的许可和访问级别的语句，这些语句定义了数据库，表，字段，用户的访问权限和安全级别，主要关键字包括grant,invoke等。</p><h2 id="SQL语句基础"><a href="#SQL语句基础" class="headerlink" title="SQL语句基础"></a>SQL语句基础</h2><h3 id="查看数据库创建语句"><a href="#查看数据库创建语句" class="headerlink" title="查看数据库创建语句"></a>查看数据库创建语句</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">database</span> database_name;</span><br></pre></td></tr></table></figure><h3 id="查看表结构定义语句："><a href="#查看表结构定义语句：" class="headerlink" title="查看表结构定义语句："></a>查看表结构定义语句：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> table_name;</span><br></pre></td></tr></table></figure><h3 id="修改表"><a href="#修改表" class="headerlink" title="修改表"></a>修改表</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 修改字段类型</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> alter table <span class="built_in">test</span> modify USER_NAME varchar(100);</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 增加字段</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> alter table <span class="built_in">test</span> add loginid int(10);</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除字段</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> alter table <span class="built_in">test</span> drop loginid;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改字段名称</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> alter table <span class="built_in">test</span> change loginid LOGINID int(12);</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改字段排列顺序,增加isok字段到USER_NAME字段之后</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> alter table <span class="built_in">test</span> add isok varchar(1) after USER_NAME;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改表名称</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> alter table <span class="built_in">test</span> rename test1;</span></span><br><span class="line">desc test1;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      SQL语法基础
    
    </summary>
    
      <category term="搬砖" scheme="http://chilam.me/categories/%E6%90%AC%E7%A0%96/"/>
    
    
      <category term="mysql" scheme="http://chilam.me/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>1.mysql-install</title>
    <link href="http://chilam.me/2018/06/20/mysql-1/"/>
    <id>http://chilam.me/2018/06/20/mysql-1/</id>
    <published>2018-06-20T02:01:13.000Z</published>
    <updated>2018-06-30T10:05:00.248Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装的时候遇见的错误"><a href="#安装的时候遇见的错误" class="headerlink" title="安装的时候遇见的错误"></a>安装的时候遇见的错误</h2><p><a href="https://blog.csdn.net/xx_star1204/article/details/76762175" target="_blank" rel="noopener">https://blog.csdn.net/xx_star1204/article/details/76762175</a></p><h2 id="允许root用户远程访问"><a href="#允许root用户远程访问" class="headerlink" title="允许root用户远程访问"></a>允许root用户远程访问</h2><ul><li><p>GRANT ALL PRIVILEGES ON <em>.</em> TO ‘root‘@’%’ IDENTIFIED BY ‘123456’ WITH GRANT OPTION;</p></li><li><p>FLUSH PRIVILEGES;</p></li></ul>]]></content>
    
    <summary type="html">
    
      mysql安装
    
    </summary>
    
      <category term="搬砖" scheme="http://chilam.me/categories/%E6%90%AC%E7%A0%96/"/>
    
    
      <category term="mysql" scheme="http://chilam.me/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>1.收藏的一些链接</title>
    <link href="http://chilam.me/2018/06/17/links/"/>
    <id>http://chilam.me/2018/06/17/links/</id>
    <published>2018-06-17T06:28:01.000Z</published>
    <updated>2018-07-02T01:43:09.318Z</updated>
    
    <content type="html"><![CDATA[<h2 id="java"><a href="#java" class="headerlink" title="java"></a>java</h2><ul><li><a href="http://www.oracle.com/technetwork/java/javase/archive-139210.html" target="_blank" rel="noopener">Java所有版本</a></li><li><a href="http://hllvm.group.iteye.com/" target="_blank" rel="noopener">高级语言虚拟机圈子</a></li><li><a href="http://icyfenix.iteye.com/" target="_blank" rel="noopener">深入理解JVM作者博客</a></li><li><a href="https://docs.oracle.com/javase/10/" target="_blank" rel="noopener">JDK各个版本文档</a></li><li><a href="https://docs.oracle.com/javase/7/docs/index.html" target="_blank" rel="noopener">JDK7文档</a></li><li><a href="https://docs.oracle.com/javase/8/docs/index.html" target="_blank" rel="noopener">JDK8文档</a></li><li><a href="https://docs.oracle.com/javase/specs/index.html" target="_blank" rel="noopener">所有版本java语言和虚拟机规范</a></li><li><a href="https://docs.oracle.com/javase/tutorial/tutorialLearningPaths.html" target="_blank" rel="noopener">java官方学习文档</a></li></ul><h2 id="优秀博客"><a href="#优秀博客" class="headerlink" title="优秀博客"></a>优秀博客</h2><ul><li><a href="https://www.jianshu.com/u/581f548ef0ec" target="_blank" rel="noopener">李艳鹏-分布式服务相关</a></li><li><a href="http://ginobefunny.com/" target="_blank" rel="noopener">JVM相关</a></li><li><a href="https://www.jianshu.com/nb/13314305" target="_blank" rel="noopener">Java工程师系列</a></li><li><a href="http://www.cnblogs.com/ysocean/" target="_blank" rel="noopener">Java基础</a></li><li><a href="http://www.coolblog.xyz/" target="_blank" rel="noopener">比较多的源码分析-spring,jdk</a></li><li><a href="https://www.jianshu.com/p/bbd4cb15bc5f" target="_blank" rel="noopener">idea的使用文档</a></li><li><a href="https://www.cnblogs.com/oldtrafford/p/6883796.html" target="_blank" rel="noopener">G1垃圾收集</a></li><li><a href="https://github.com/crossoverJie/Java-Interview" target="_blank" rel="noopener">Java面试准备相关的</a></li></ul><h2 id="个人"><a href="#个人" class="headerlink" title="个人"></a>个人</h2><ul><li><a href="https://leetcode.com/" target="_blank" rel="noopener">LeetCode</a></li><li><a href="https://www.processon.com/diagrams" target="_blank" rel="noopener">在线画图工具</a></li><li><a href="http://jiantuku.com/#/albums/60563?scope=public" target="_blank" rel="noopener">图片存储</a></li><li><a href="https://smallpdf.com/cn/jpg-to-pdf" target="_blank" rel="noopener">JPG转PDF</a></li></ul>]]></content>
    
    <summary type="html">
    
      一些链接，随时会更新
    
    </summary>
    
      <category term="搬砖" scheme="http://chilam.me/categories/%E6%90%AC%E7%A0%96/"/>
    
    
      <category term="links" scheme="http://chilam.me/tags/links/"/>
    
  </entry>
  
  <entry>
    <title>黑胡椒意面</title>
    <link href="http://chilam.me/2018/06/16/life-dinner-noodle/"/>
    <id>http://chilam.me/2018/06/16/life-dinner-noodle/</id>
    <published>2018-06-16T03:21:41.000Z</published>
    <updated>2018-06-30T12:11:26.847Z</updated>
    
    <content type="html"><![CDATA[<h2 id="意大利面"><a href="#意大利面" class="headerlink" title="意大利面"></a>意大利面</h2><ul><li>烹饪时间：2018年6月16日 午餐</li></ul><h3 id="材料"><a href="#材料" class="headerlink" title="材料"></a>材料</h3><p><img src="http://orkt468tj.bkt.clouddn.com/18-6-18/87605624.jpg" alt=""></p><ul><li>黑胡椒汁</li><li>番茄沙司</li><li>圆头香菇</li><li>胡萝卜半根</li><li>洋葱半个</li><li>红椒半个</li><li>西红柿一个</li><li>秘制酱肉</li><li>意大利面250g</li></ul><h3 id="制作步骤"><a href="#制作步骤" class="headerlink" title="制作步骤"></a>制作步骤</h3><ol><li>将意面煮15min，捞起来晒起</li><li>热油炒酱肉1分钟，在放胡萝卜和红椒，炒2分钟</li><li>放西红柿和洋葱炒1分钟</li><li>倒入意面，放番茄沙司，和胡萝卜汁搅拌均匀</li><li>放盐调味起锅</li></ol><h3 id="成品"><a href="#成品" class="headerlink" title="成品"></a>成品</h3><p><img src="http://orkt468tj.bkt.clouddn.com/18-6-18/84130571.jpg" alt=""></p><ul><li>黑胡椒和番茄沙司才是王道!!!</li><li>当然还有秘制酱肉</li><li>菜还是少了，该用一根胡萝卜，和一个红椒</li></ul>]]></content>
    
    <summary type="html">
    
      美食的啦
    
    </summary>
    
      <category term="1房2人3餐4季" scheme="http://chilam.me/categories/1%E6%88%BF2%E4%BA%BA3%E9%A4%904%E5%AD%A3/"/>
    
    
      <category term="spring-boot" scheme="http://chilam.me/tags/spring-boot/"/>
    
  </entry>
  
  <entry>
    <title>8.sb-原理</title>
    <link href="http://chilam.me/2017/12/17/spring-boot-8/"/>
    <id>http://chilam.me/2017/12/17/spring-boot-8/</id>
    <published>2017-12-17T01:00:08.000Z</published>
    <updated>2018-06-30T10:05:00.264Z</updated>
    
    <content type="html"><![CDATA[<p>见识了SpringBoot为我们做的自动配置，确实方便快捷，但是对于新手来说，如果不大懂SpringBoot内部启动原理，<br>以后难免会吃亏。一起一步步揭开SpringBoot的神秘面纱，让它不在神秘。</p><p>我们开发任何一个Spring Boot项目，都会用到如下的启动类</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Application</span> &#123;</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(String[] args) &#123;</span><br><span class="line">        SpringApplication.run(Application.<span class="keyword">class</span>, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从上面代码可以看出，Annotation定义（@SpringBootApplication）和类定义（SpringApplication.run）最为耀眼，<br>所以要揭开SpringBoot的神秘面纱，我们要从这两位开始就可以了。</p><h2 id="SpringBootApplication"><a href="#SpringBootApplication" class="headerlink" title="@SpringBootApplication"></a>@SpringBootApplication</h2><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="variable">@Target</span>(ElementType.TYPE)</span><br><span class="line"><span class="variable">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="variable">@Documented</span></span><br><span class="line"><span class="variable">@Inherited</span></span><br><span class="line"><span class="variable">@SpringBootConfiguration</span></span><br><span class="line"><span class="variable">@EnableAutoConfiguration</span></span><br><span class="line"><span class="variable">@ComponentScan</span>(excludeFilters = &#123;</span><br><span class="line"><span class="variable">@Filter</span>(type = FilterType.CUSTOM, classes = TypeExcludeFilter.class),</span><br><span class="line"><span class="variable">@Filter</span>(type = FilterType.CUSTOM, classes = AutoConfigurationExcludeFilter.class) &#125;)</span><br><span class="line">public <span class="variable">@interface</span> SpringBootApplication &#123;&#125;</span><br></pre></td></tr></table></figure><ul><li>@Configuration(@SpringBootConfiguration点开查看发现里面还是应用了@Configuration)</li><li>@EnableAutoConfiguration</li><li>@ComponentScan</li></ul><h3 id="Configuration"><a href="#Configuration" class="headerlink" title="@Configuration"></a>@Configuration</h3><p>这里的@Configuration对我们来说不陌生，它就是JavaConfig形式的Spring Ioc容器的配置类使用的那个@Configuration，<br>SpringBoot社区推荐使用基于JavaConfig的配置形式，所以，这里的启动类标注了@Configuration之后，本身其实也是一个IoC容器的配置类。</p><p>回顾一下对于一个spring的bean使用xml方式配置的话是如下的</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userService"</span> <span class="attr">class</span>=<span class="string">"me.chilam.example.UserServiceImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>对于Java Config的方式应该是如下的：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">package</span> <span class="selector-tag">me</span><span class="selector-class">.chilam</span><span class="selector-class">.example</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.context</span><span class="selector-class">.annotation</span><span class="selector-class">.Bean</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.context</span><span class="selector-class">.annotation</span><span class="selector-class">.Configuration</span>;</span><br><span class="line">@<span class="keyword">Configuration</span></span><br><span class="line"><span class="keyword">public</span> class UserConfig &#123;</span><br><span class="line"></span><br><span class="line">    @<span class="keyword">Bean</span></span><br><span class="line">    public IUserService userService()&#123;</span><br><span class="line">        <span class="selector-tag">return</span> <span class="selector-tag">new</span> <span class="selector-tag">UserServiceImpl</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>任何一个标注了@Bean的方法，其返回值将作为一个bean定义注册到Spring的IoC容器，方法名将默认成该bean定义的id。</p><h3 id="ComponentScan"><a href="#ComponentScan" class="headerlink" title="@ComponentScan"></a>@ComponentScan</h3><p>@ComponentScan这个注解在Spring中很重要，它对应XML配置中的元素，@ComponentScan的功能其实就是自动扫描并加载符合条件的组件<br>（比如@Component和@Repository等）或者bean定义，最终将这些bean定义加载到IoC容器中。</p><p>我们可以通过basePackages等属性来细粒度的定制@ComponentScan自动扫描的范围，如果不指定，<br>则默认Spring框架实现会从声明@ComponentScan所在类的package进行扫描。</p><h3 id="EnableAutoConfiguration"><a href="#EnableAutoConfiguration" class="headerlink" title="@EnableAutoConfiguration"></a>@EnableAutoConfiguration</h3><p>大家是否还记得Spring框架提供的各种名字为@Enable开头的Annotation定义？比如@EnableScheduling、@EnableCaching、<br>@EnableMBeanExport等，@EnableAutoConfiguration的理念和做事方式其实一脉相承，简单概括一下就是，<br>借助@Import的支持，收集和注册特定场景相关的bean定义。</p><ul><li>@EnableScheduling是通过@Import将Spring调度框架相关的bean定义都加载到IoC容器。</li><li>@EnableMBeanExport是通过@Import将JMX相关的bean定义加载到IoC容器。</li></ul><p>而@EnableAutoConfiguration也是借助@Import的帮助，将所有符合自动配置条件的bean定义加载到IoC容器，仅此而已！</p><p>@EnableAutoConfiguration作为一个复合Annotation,其自身定义关键信息如下</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Target(ElementType.TYPE)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Import(EnableConfigurationPropertiesImportSelector.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> EnableConfigurationProperties &#123;</span><br><span class="line">Class&lt;?&gt;[] value() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Spring Boot还没有写完，感觉还是先把所有功能过一遍在来搞原理
    
    </summary>
    
      <category term="搬砖" scheme="http://chilam.me/categories/%E6%90%AC%E7%A0%96/"/>
    
    
      <category term="spring-boot" scheme="http://chilam.me/tags/spring-boot/"/>
    
  </entry>
  
  <entry>
    <title>7.sb-jdbcTemplate</title>
    <link href="http://chilam.me/2017/12/17/spring-boot-7/"/>
    <id>http://chilam.me/2017/12/17/spring-boot-7/</id>
    <published>2017-12-17T01:00:07.000Z</published>
    <updated>2018-06-30T10:05:00.264Z</updated>
    
    <content type="html"><![CDATA[<p>本文介绍在Spring Boot基础下配置数据源和通过JdbcTemplate编写数据访问的示例。</p><h2 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.38<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="数据源配置"><a href="#数据源配置" class="headerlink" title="数据源配置"></a>数据源配置</h2><p>Spring Boot默认数据源配置,spring-boot-starter-jdbc 默认使用tomcat-jdbc数据源，</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">spring<span class="selector-class">.datasource</span><span class="selector-class">.driver-class-name</span>=com<span class="selector-class">.mysql</span><span class="selector-class">.jdbc</span><span class="selector-class">.Driver</span></span><br><span class="line">spring<span class="selector-class">.datasource</span><span class="selector-class">.url</span>=jdbc:mysql:<span class="comment">//localhost:3306/boot_db</span></span><br><span class="line">spring<span class="selector-class">.datasource</span><span class="selector-class">.username</span>=root</span><br><span class="line">spring<span class="selector-class">.datasource</span><span class="selector-class">.password</span>=test123456</span><br></pre></td></tr></table></figure><h2 id="初始化库表"><a href="#初始化库表" class="headerlink" title="初始化库表"></a>初始化库表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> t_user</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">id</span>   <span class="built_in">INT</span> AUTO_INCREMENT PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">  <span class="keyword">name</span> <span class="built_in">VARCHAR</span>(<span class="number">100</span>) <span class="literal">NULL</span>,</span><br><span class="line">  age  <span class="built_in">INT</span>          <span class="literal">NULL</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h2 id="编写dao类"><a href="#编写dao类" class="headerlink" title="编写dao类"></a>编写dao类</h2><ul><li>IUserDao接口</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> me.chilam.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> me.chilam.vo.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IUserDAO</span> </span>&#123;</span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">selectUsers</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">insertUser</span><span class="params">(User user)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">deleteUserById</span><span class="params">(Long id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>UserDaoImpl实现类</li></ul><p>Spring的jdbcTemplate是自动配置的，可以直接使用@Autowried自动注入</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> me.chilam.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> me.chilam.vo.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.JdbcTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.RowMapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title">IUserDAO</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 直接注入使用即可</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JdbcTemplate jdbcTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;User&gt; selectUsers() &#123;</span><br><span class="line">       <span class="function"><span class="keyword">return</span> jdbcTemplate.<span class="title">query</span><span class="params">(<span class="string">"SELECT * FROM t_user"</span>, <span class="keyword">new</span> RowMapper&lt;User&gt;()</span> </span>&#123;</span><br><span class="line">           <span class="meta">@Override</span></span><br><span class="line">           <span class="keyword">public</span> <span class="function">User <span class="title">mapRow</span><span class="params">(ResultSet resultSet, <span class="keyword">int</span> i)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">               User user = <span class="keyword">new</span> User();</span><br><span class="line">               user.setId(resultSet.getLong(<span class="string">"id"</span>));</span><br><span class="line">               user.setName(resultSet.getString(<span class="string">"name"</span>));</span><br><span class="line">               user.setAge(resultSet.getInt(<span class="string">"age"</span>));</span><br><span class="line">               <span class="keyword">return</span> user;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">int</span> <span class="title">insertUser</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> jdbcTemplate.update(<span class="string">"INSERT INTO t_user(name,age) VALUE (?,?)"</span>,user.getName(),user.getAge());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">int</span> <span class="title">deleteUserById</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">return</span> jdbcTemplate.<span class="title">update</span><span class="params">(<span class="string">"DELETE FROM t_user WHERE id=?"</span>,id)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="编写Service类"><a href="#编写Service类" class="headerlink" title="编写Service类"></a>编写Service类</h2><ul><li>IUserService接口</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> me.chilam.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> me.chilam.vo.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IUserService</span> </span>&#123;</span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">getAllUsers</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">addUser</span><span class="params">(User user)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">removeUserById</span><span class="params">(Long id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>UserServiceImpl实现类</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">package</span> <span class="selector-tag">me</span><span class="selector-class">.chilam</span><span class="selector-class">.service</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">me</span><span class="selector-class">.chilam</span><span class="selector-class">.dao</span><span class="selector-class">.IUserDAO</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">me</span><span class="selector-class">.chilam</span><span class="selector-class">.vo</span><span class="selector-class">.User</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.beans</span><span class="selector-class">.factory</span><span class="selector-class">.annotation</span><span class="selector-class">.Autowired</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.stereotype</span><span class="selector-class">.Service</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">java</span><span class="selector-class">.util</span><span class="selector-class">.List</span>;</span><br><span class="line"></span><br><span class="line">@<span class="keyword">Service</span></span><br><span class="line"><span class="keyword">public</span> class UserServiceImpl implements IUserService &#123;</span><br><span class="line"></span><br><span class="line">    @<span class="keyword">Autowired</span></span><br><span class="line">    IUserDAO userDAO;</span><br><span class="line"></span><br><span class="line">    @<span class="keyword">Override</span></span><br><span class="line">    public List&lt;User&gt; getAllUsers() &#123;</span><br><span class="line">        <span class="selector-tag">return</span> <span class="selector-tag">userDAO</span><span class="selector-class">.selectUsers</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @<span class="keyword">Override</span></span><br><span class="line">    public int addUser(User user) &#123;</span><br><span class="line">        <span class="selector-tag">return</span> <span class="selector-tag">userDAO</span><span class="selector-class">.insertUser</span>(<span class="selector-tag">user</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @<span class="keyword">Override</span></span><br><span class="line">    public int removeUserById(Long id) &#123;</span><br><span class="line">        <span class="selector-tag">return</span> <span class="selector-tag">userDAO</span><span class="selector-class">.deleteUserById</span>(<span class="selector-tag">id</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="编写控制类"><a href="#编写控制类" class="headerlink" title="编写控制类"></a>编写控制类</h2><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> me.chilam.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiImplicitParam;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiOperation;</span><br><span class="line"><span class="keyword">import</span> me.chilam.service.IUserService;</span><br><span class="line"><span class="keyword">import</span> me.chilam.vo.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.<span class="keyword">annotation</span>.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(<span class="meta-string">"users"</span>)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    IUserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation(value=<span class="meta-string">"获取用户列表"</span>, notes=<span class="meta-string">"获取用户列表的数据"</span>)</span></span><br><span class="line">    <span class="meta">@RequestMapping(value=&#123;<span class="meta-string">""</span>&#125;, method= RequestMethod.GET)</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;User&gt; getUserList() &#123;</span><br><span class="line">        List&lt;User&gt; r = userService.getAllUsers();</span><br><span class="line">        <span class="keyword">return</span> r;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation(value=<span class="meta-string">"创建用户"</span>, notes=<span class="meta-string">"根据User对象创建用户"</span>)</span></span><br><span class="line">    <span class="meta">@ApiImplicitParam(name = <span class="meta-string">"user"</span>, value = <span class="meta-string">"用户详细实体user"</span>, required = true, dataType = <span class="meta-string">"User"</span>)</span></span><br><span class="line">    <span class="meta">@RequestMapping(value=<span class="meta-string">""</span>, method=RequestMethod.POST)</span></span><br><span class="line">    <span class="keyword">public</span> String postUser(<span class="meta">@RequestBody</span> User user) &#123;</span><br><span class="line">        userService.addUser(user);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation(value=<span class="meta-string">"删除用户"</span>, notes=<span class="meta-string">"根据url的id来指定删除对象"</span>)</span></span><br><span class="line">    <span class="meta">@ApiImplicitParam(name = <span class="meta-string">"id"</span>, value = <span class="meta-string">"用户ID"</span>, required = true, dataType = <span class="meta-string">"Long"</span>)</span></span><br><span class="line">    <span class="meta">@RequestMapping(value=<span class="meta-string">"/&#123;id&#125;"</span>, method=RequestMethod.GET)</span></span><br><span class="line">    <span class="keyword">public</span> String deleteUser(<span class="meta">@PathVariable</span> <span class="built_in">Long</span> id) &#123;</span><br><span class="line">        userService.removeUserById(id);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="自定义数据源配置"><a href="#自定义数据源配置" class="headerlink" title="自定义数据源配置"></a>自定义数据源配置</h2><ul><li>使用druid数据源，添加依赖如下：</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>Druid配置类</li></ul><p>如下的配置，Spring boot会智能适配jdbcTemplate</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.alibaba.druid.pool.DruidDataSource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.<span class="keyword">annotation</span>.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.env.Environment;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DruidConfiguration</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//使用Spring自定义环境变量</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    Environment environment;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(destroyMethod = <span class="meta-string">"close"</span>)</span></span><br><span class="line">    <span class="keyword">public</span> DataSource dataSource()&#123;</span><br><span class="line">        DruidDataSource dataSource = new DruidDataSource();</span><br><span class="line">        dataSource.setUrl(environment.getProperty(<span class="string">"spring.datasource.url"</span>));</span><br><span class="line">        dataSource.setUsername(environment.getProperty(<span class="string">"spring.datasource.username"</span>));<span class="comment">//用户名</span></span><br><span class="line">        dataSource.setPassword(environment.getProperty(<span class="string">"spring.datasource.password"</span>));<span class="comment">//密码</span></span><br><span class="line">        dataSource.setDriverClassName(environment.getProperty(<span class="string">"spring.datasource.driver-class-name"</span>));</span><br><span class="line">        dataSource.setInitialSize(<span class="number">2</span>);<span class="comment">//初始化时建立物理连接的个数</span></span><br><span class="line">        dataSource.setMaxActive(<span class="number">20</span>);<span class="comment">//最大连接池数量</span></span><br><span class="line">        dataSource.setMinIdle(<span class="number">0</span>);<span class="comment">//最小连接池数量</span></span><br><span class="line">        dataSource.setMaxWait(<span class="number">60000</span>);<span class="comment">//获取连接时最大等待时间，单位毫秒。</span></span><br><span class="line">        dataSource.setValidationQuery(<span class="string">"SELECT 1"</span>);<span class="comment">//用来检测连接是否有效的sql</span></span><br><span class="line">        dataSource.setTestOnBorrow(<span class="literal">false</span>);<span class="comment">//申请连接时执行validationQuery检测连接是否有效</span></span><br><span class="line">        dataSource.setTestWhileIdle(<span class="literal">true</span>);<span class="comment">//建议配置为true，不影响性能，并且保证安全性。</span></span><br><span class="line">        dataSource.setPoolPreparedStatements(<span class="literal">false</span>);<span class="comment">//是否缓存preparedStatement，也就是PSCache</span></span><br><span class="line">        <span class="keyword">return</span> dataSource;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Spring Boot的jdbcTemplate
    
    </summary>
    
      <category term="搬砖" scheme="http://chilam.me/categories/%E6%90%AC%E7%A0%96/"/>
    
    
      <category term="spring-boot" scheme="http://chilam.me/tags/spring-boot/"/>
    
  </entry>
  
  <entry>
    <title>6.sb-DevTools</title>
    <link href="http://chilam.me/2017/12/17/spring-boot-6/"/>
    <id>http://chilam.me/2017/12/17/spring-boot-6/</id>
    <published>2017-12-17T01:00:06.000Z</published>
    <updated>2018-06-30T10:05:00.264Z</updated>
    
    <content type="html"><![CDATA[<h2 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Spring Boot开发插件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>将依赖关系标记为可选<optional>true</optional>是一种最佳做法，可以防止使用项目将devtools传递性地应用于其他模块。</p><h2 id="默认属性"><a href="#默认属性" class="headerlink" title="默认属性"></a>默认属性</h2><p>在Spring Boot集成Thymeleaf时，spring.thymeleaf.cache属性设置为false可以禁用模板引擎编译的缓存结果。<br>现在，devtools会自动帮你做到这些，禁用所有模板的缓存，包括Thymeleaf, Freemarker, Groovy Templates, Velocity, Mustache等。<br>更多的默认配置可以查看org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor</p><h2 id="自动重启"><a href="#自动重启" class="headerlink" title="自动重启"></a>自动重启</h2><p>自动重启的原理在于spring boot使用两个classloader：不改变的类（如第三方jar）由base类加载器加载，正在开发的类由restart类加载器加载。<br>应用重启时，restart类加载器被扔掉重建，而base类加载器不变，这种方法意味着应用程序重新启动通常比“冷启动”快得多，因为base类加载器已经可用并已填充。</p><p>所以，当我们开启devtools后，classpath中的文件变化会导致应用自动重启。<br>当然不同的IDE效果不一样，Eclipse中保存文件即可引起classpath更新(注：需要打开自动编译)，<br>从而触发重启。而IDEA则需要自己手动CTRL+F9重新编译一下（感觉IDEA这种更好，不然每修改一个地方就重启,会很卡的）</p><h2 id="排除静态资源文件"><a href="#排除静态资源文件" class="headerlink" title="排除静态资源文件"></a>排除静态资源文件</h2><p>静态资源文件在改变之后有时候没必要触发应用程序重启，例如thymeleaf模板文件就可以实时编辑，默认情况下，更改/META-INF/maven, /META-INF/resources ,/resources ,/static ,/public<br>或/templates下的资源不会触发重启，而是触发live reload（devtools内嵌了一个LiveReload server，当资源发生改变时，浏览器刷新,下面会介绍）。</p><p>可以使用spring.devtools.restart.exclude属性配置，例如</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">spring<span class="selector-class">.devtools</span><span class="selector-class">.restart</span><span class="selector-class">.exclude</span>=static<span class="comment">/**,public/**</span></span><br></pre></td></tr></table></figure><p>如果想保留默认配置，同时增加新的配置，则可使用</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">spring<span class="selector-class">.devtools</span><span class="selector-class">.restart</span><span class="selector-class">.additional-exclude</span>=</span><br></pre></td></tr></table></figure><h2 id="观察额外的路径"><a href="#观察额外的路径" class="headerlink" title="观察额外的路径"></a>观察额外的路径</h2><p>如果你想观察不在classpath中的路径的文件变化并触发重启，则可以配置 spring.devtools.restart.additional-paths 属性。</p><h2 id="关闭自动重启"><a href="#关闭自动重启" class="headerlink" title="关闭自动重启"></a>关闭自动重启</h2><p>设置 spring.devtools.restart.enabled 属性为false，可以关闭该特性。可以在application.properties中设置，也可以通过设置环境变量的方式。</p><h2 id="LiveReload"><a href="#LiveReload" class="headerlink" title="LiveReload"></a>LiveReload</h2><p>DevTools内置了一个LiveReload服务,可以在资源变化时用来触发浏览器刷新。当然这个需要你浏览器安装了LiveReload插件，并且启动这个插件才行。</p>]]></content>
    
    <summary type="html">
    
      Spring Boot的开发工具，以及热部署工具
    
    </summary>
    
      <category term="搬砖" scheme="http://chilam.me/categories/%E6%90%AC%E7%A0%96/"/>
    
    
      <category term="spring-boot" scheme="http://chilam.me/tags/spring-boot/"/>
    
  </entry>
  
  <entry>
    <title>5.sb-Swagger</title>
    <link href="http://chilam.me/2017/12/17/spring-boot-5/"/>
    <id>http://chilam.me/2017/12/17/spring-boot-5/</id>
    <published>2017-12-17T01:00:05.000Z</published>
    <updated>2018-06-30T10:05:00.264Z</updated>
    
    <content type="html"><![CDATA[<h2 id="配置依赖"><a href="#配置依赖" class="headerlink" title="配置依赖"></a>配置依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--Swagger--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="配置类"><a href="#配置类" class="headerlink" title="配置类"></a>配置类</h2><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><span class="meta-keyword">import</span> org.springframework.context.annotation.Bean;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> org.springframework.context.annotation.Configuration;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> springfox.documentation.builders.ApiInfoBuilder;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> springfox.documentation.builders.PathSelectors;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> springfox.documentation.builders.RequestHandlerSelectors;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> springfox.documentation.service.ApiInfo;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> springfox.documentation.spi.DocumentationType;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> springfox.documentation.spring.web.plugins.Docket;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> springfox.documentation.swagger2.annotations.EnableSwagger2;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Swagger的配置类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">@Configuration</span><br><span class="line">@EnableSwagger2</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SwaggerConfiguration</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    @Bean</span><br><span class="line">    <span class="keyword">public</span> Docket createRestApi() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Docket(DocumentationType.SWAGGER_2)</span><br><span class="line">                .apiInfo(apiInfo())</span><br><span class="line">                .select()</span><br><span class="line">                .apis(RequestHandlerSelectors.basePackage(<span class="string">"me.chilam.web"</span>))</span><br><span class="line">                .paths(PathSelectors.any())</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ApiInfo apiInfo() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ApiInfoBuilder()</span><br><span class="line">                .title(<span class="string">"Spring Boot中使用Swagger2构建RESTful APIs"</span>)</span><br><span class="line">                .description(<span class="string">"测试描述信息"</span>)</span><br><span class="line">                .termsOfServiceUrl(<span class="string">"http://localhost:8080/"</span>)</span><br><span class="line">                .version(<span class="string">"1.0"</span>)</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="启动类"><a href="#启动类" class="headerlink" title="启动类"></a>启动类</h2><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.ComponentScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.Import;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@ComponentScan(basePackages = &#123;<span class="meta-string">"me.chilam.**"</span>&#125;)</span></span><br><span class="line"><span class="comment">//引入Swagger的配置</span></span><br><span class="line"><span class="meta">@Import(SwaggerConfiguration.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Application</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> static void main(String[] args) &#123;</span><br><span class="line">        SpringApplication.run(Application.<span class="keyword">class</span>,args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Restful控制器"><a href="#Restful控制器" class="headerlink" title="Restful控制器"></a>Restful控制器</h2><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> me.chilam.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiImplicitParam;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiImplicitParams;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiOperation;</span><br><span class="line"><span class="keyword">import</span> me.chilam.vo.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(<span class="meta-string">"users"</span>)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    static Map&lt;<span class="built_in">Long</span>, User&gt; users = Collections.synchronizedMap(new HashMap&lt;<span class="built_in">Long</span>, User&gt;());</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation(value=<span class="meta-string">"获取用户列表"</span>, notes=<span class="meta-string">""</span>)</span></span><br><span class="line">    <span class="meta">@RequestMapping(value=&#123;<span class="meta-string">""</span>&#125;, method= RequestMethod.GET)</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;User&gt; getUserList() &#123;</span><br><span class="line">        List&lt;User&gt; r = new ArrayList&lt;&gt;(users.values());</span><br><span class="line">        <span class="keyword">return</span> r;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation(value=<span class="meta-string">"创建用户"</span>, notes=<span class="meta-string">"根据User对象创建用户"</span>)</span></span><br><span class="line">    <span class="meta">@ApiImplicitParam(name = <span class="meta-string">"user"</span>, value = <span class="meta-string">"用户详细实体user"</span>, required = true, dataType = <span class="meta-string">"User"</span>)</span></span><br><span class="line">    <span class="meta">@RequestMapping(value=<span class="meta-string">""</span>, method=RequestMethod.POST)</span></span><br><span class="line">    <span class="keyword">public</span> String postUser(<span class="meta">@RequestBody</span> User user) &#123;</span><br><span class="line">        users.put(user.getId(), user);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation(value=<span class="meta-string">"获取用户详细信息"</span>, notes=<span class="meta-string">"根据url的id来获取用户详细信息"</span>)</span></span><br><span class="line">    <span class="meta">@ApiImplicitParam(name = <span class="meta-string">"id"</span>, value = <span class="meta-string">"用户ID"</span>, required = true, dataType = <span class="meta-string">"Long"</span>)</span></span><br><span class="line">    <span class="meta">@RequestMapping(value=<span class="meta-string">"/&#123;id&#125;"</span>, method=RequestMethod.GET)</span></span><br><span class="line">    <span class="keyword">public</span> User getUser(<span class="meta">@PathVariable</span> <span class="built_in">Long</span> id) &#123;</span><br><span class="line">        <span class="keyword">return</span> users.<span class="keyword">get</span>(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation(value=<span class="meta-string">"更新用户详细信息"</span>, notes=<span class="meta-string">"根据url的id来指定更新对象，并根据传过来的user信息来更新用户详细信息"</span>)</span></span><br><span class="line">    <span class="meta">@ApiImplicitParams(&#123;</span></span><br><span class="line"><span class="meta">            @ApiImplicitParam(name = <span class="meta-string">"id"</span>, value = <span class="meta-string">"用户ID"</span>, required = true, dataType = <span class="meta-string">"Long"</span>)</span>,</span><br><span class="line">            <span class="meta">@ApiImplicitParam(name = <span class="meta-string">"user"</span>, value = <span class="meta-string">"用户详细实体user"</span>, required = true, dataType = <span class="meta-string">"User"</span>)</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="meta">@RequestMapping(value=<span class="meta-string">"/&#123;id&#125;"</span>, method=RequestMethod.PUT)</span></span><br><span class="line">    <span class="keyword">public</span> String putUser(<span class="meta">@PathVariable</span> <span class="built_in">Long</span> id, <span class="meta">@RequestBody</span> User user) &#123;</span><br><span class="line">        User u = users.<span class="keyword">get</span>(id);</span><br><span class="line">        u.setName(user.getName());</span><br><span class="line">        u.setAge(user.getAge());</span><br><span class="line">        users.put(id, u);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation(value=<span class="meta-string">"删除用户"</span>, notes=<span class="meta-string">"根据url的id来指定删除对象"</span>)</span></span><br><span class="line">    <span class="meta">@ApiImplicitParam(name = <span class="meta-string">"id"</span>, value = <span class="meta-string">"用户ID"</span>, required = true, dataType = <span class="meta-string">"Long"</span>)</span></span><br><span class="line">    <span class="meta">@RequestMapping(value=<span class="meta-string">"/&#123;id&#125;"</span>, method=RequestMethod.DELETE)</span></span><br><span class="line">    <span class="keyword">public</span> String deleteUser(<span class="meta">@PathVariable</span> <span class="built_in">Long</span> id) &#123;</span><br><span class="line">        users.remove(id);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="观察启动日志中Swagger"><a href="#观察启动日志中Swagger" class="headerlink" title="观察启动日志中Swagger"></a>观察启动日志中Swagger</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2017</span>-<span class="number">12</span>-<span class="number">25</span> <span class="number">09</span>:<span class="number">13</span>:<span class="number">16.606</span>  INFO <span class="number">952</span> --- [           main] s<span class="selector-class">.w</span><span class="selector-class">.s</span><span class="selector-class">.m</span><span class="selector-class">.m</span><span class="selector-class">.a</span><span class="selector-class">.RequestMappingHandlerMapping</span> : Mapped <span class="string">"&#123;[/swagger-resources/configuration/ui]&#125;"</span> onto public org<span class="selector-class">.springframework</span><span class="selector-class">.http</span><span class="selector-class">.ResponseEntity</span>&lt;springfox<span class="selector-class">.documentation</span><span class="selector-class">.swagger</span><span class="selector-class">.web</span><span class="selector-class">.UiConfiguration</span>&gt; springfox<span class="selector-class">.documentation</span><span class="selector-class">.swagger</span><span class="selector-class">.web</span><span class="selector-class">.ApiResourceController</span><span class="selector-class">.uiConfiguration</span>()</span><br><span class="line"><span class="number">2017</span>-<span class="number">12</span>-<span class="number">25</span> <span class="number">09</span>:<span class="number">13</span>:<span class="number">16.607</span>  INFO <span class="number">952</span> --- [           main] s<span class="selector-class">.w</span><span class="selector-class">.s</span><span class="selector-class">.m</span><span class="selector-class">.m</span><span class="selector-class">.a</span><span class="selector-class">.RequestMappingHandlerMapping</span> : Mapped <span class="string">"&#123;[/swagger-resources]&#125;"</span> onto public org<span class="selector-class">.springframework</span><span class="selector-class">.http</span><span class="selector-class">.ResponseEntity</span>&lt;java<span class="selector-class">.util</span><span class="selector-class">.List</span>&lt;springfox<span class="selector-class">.documentation</span><span class="selector-class">.swagger</span><span class="selector-class">.web</span><span class="selector-class">.SwaggerResource</span>&gt;&gt; springfox<span class="selector-class">.documentation</span><span class="selector-class">.swagger</span><span class="selector-class">.web</span><span class="selector-class">.ApiResourceController</span><span class="selector-class">.swaggerResources</span>()</span><br><span class="line"><span class="number">2017</span>-<span class="number">12</span>-<span class="number">25</span> <span class="number">09</span>:<span class="number">13</span>:<span class="number">16.607</span>  INFO <span class="number">952</span> --- [           main] s<span class="selector-class">.w</span><span class="selector-class">.s</span><span class="selector-class">.m</span><span class="selector-class">.m</span><span class="selector-class">.a</span><span class="selector-class">.RequestMappingHandlerMapping</span> : Mapped <span class="string">"&#123;[/swagger-resources/configuration/security]&#125;"</span> onto public org<span class="selector-class">.springframework</span><span class="selector-class">.http</span><span class="selector-class">.ResponseEntity</span>&lt;springfox<span class="selector-class">.documentation</span><span class="selector-class">.swagger</span><span class="selector-class">.web</span><span class="selector-class">.SecurityConfiguration</span>&gt; springfox<span class="selector-class">.documentation</span><span class="selector-class">.swagger</span><span class="selector-class">.web</span><span class="selector-class">.ApiResourceController</span><span class="selector-class">.securityConfiguration</span>()</span><br></pre></td></tr></table></figure><h2 id="访问Swagger-UI"><a href="#访问Swagger-UI" class="headerlink" title="访问Swagger UI"></a>访问Swagger UI</h2><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">http:</span><span class="comment">//localhost:8080/swagger-ui.html</span></span><br></pre></td></tr></table></figure><p><img src="http://orkt468tj.bkt.clouddn.com/17-12-25/95941782.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      Spring Boot集成Swagger的入门示例
    
    </summary>
    
      <category term="搬砖" scheme="http://chilam.me/categories/%E6%90%AC%E7%A0%96/"/>
    
    
      <category term="spring-boot" scheme="http://chilam.me/tags/spring-boot/"/>
    
  </entry>
  
  <entry>
    <title>4.sb-日志</title>
    <link href="http://chilam.me/2017/12/17/spring-boot-4/"/>
    <id>http://chilam.me/2017/12/17/spring-boot-4/</id>
    <published>2017-12-17T01:00:04.000Z</published>
    <updated>2018-06-30T10:05:00.264Z</updated>
    
    <content type="html"><![CDATA[<h2 id="默认日志"><a href="#默认日志" class="headerlink" title="默认日志"></a>默认日志</h2><p>Spring Boot在所有内部日志中使用Commons Logging，但是默认配置也提供了对常用日志的支持，<br>如：Java Util Logging，Log4J, Log4J2和Logback。每种Logger都可以通过配置使用控制台或者文件输出日志内容。</p><p>SLF4J——Simple Logging Facade For Java，它是一个针对于各类Java日志框架的统一Facade抽象。<br>Java日志框架众多——常用的有java.util.logging, log4j, logback，commons-logging,<br>Spring框架使用的是Jakarta Commons Logging API (JCL)。而SLF4J定义了统一的日志抽象接口，而真正的日志实现则是在运行时决定的<br>——它提供了各类日志框架的binding。</p><p>Logback是log4j框架的作者开发的新一代日志框架，它效率更高、能够适应诸多的运行环境，同时天然支持SLF4J。</p><p>默认情况下，Spring Boot会用Logback来记录日志，并用INFO级别输出到控制台。在运行应用程序和其他例子时，<br>你应该已经看到很多INFO级别的日志了。</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">"C:<span class="symbol">\P</span>rogram Files<span class="symbol">\J</span>ava<span class="symbol">\j</span>dk1.8.0_151<span class="symbol">\b</span>in<span class="symbol">\j</span>ava" "-javaagent:E:<span class="symbol">\P</span>rogram Files<span class="symbol">\J</span>etBrains<span class="symbol">\I</span>ntelliJ IDEA 2017.3.1<span class="symbol">\l</span>ib<span class="symbol">\i</span>dea_rt.jar=56049:E:<span class="symbol">\P</span>rogram Files<span class="symbol">\J</span>etBrains<span class="symbol">\I</span>ntelliJ IDEA 2017.3.1<span class="symbol">\b</span>in" -Dfile.encoding=UTF-8 -classpath "C:<span class="symbol">\P</span>rogram Files<span class="symbol">\J</span>ava<span class="symbol">\j</span>dk1.8.0_151<span class="symbol">\j</span>re<span class="symbol">\l</span>ib<span class="symbol">\c</span>harsets.jar;C:<span class="symbol">\P</span>rogram Files<span class="symbol">\J</span>ava<span class="symbol">\j</span>dk1.8.0_151<span class="symbol">\j</span>re<span class="symbol">\l</span>ib<span class="symbol">\d</span>eploy.jar;C:<span class="symbol">\P</span>rogram Files<span class="symbol">\J</span>ava<span class="symbol">\j</span>dk1.8.0_151<span class="symbol">\j</span>re<span class="symbol">\l</span>ib<span class="symbol">\e</span>xt<span class="symbol">\a</span>ccess-bridge-64.jar;C:<span class="symbol">\P</span>rogram Files<span class="symbol">\J</span>ava<span class="symbol">\j</span>dk1.8.0_151<span class="symbol">\j</span>re<span class="symbol">\l</span>ib<span class="symbol">\e</span>xt<span class="symbol">\c</span>ldrdata.jar;C:<span class="symbol">\P</span>rogram Files<span class="symbol">\J</span>ava<span class="symbol">\j</span>dk1.8.0_151<span class="symbol">\j</span>re<span class="symbol">\l</span>ib<span class="symbol">\e</span>xt<span class="symbol">\d</span>nsns.jar;C:<span class="symbol">\P</span>rogram Files<span class="symbol">\J</span>ava<span class="symbol">\j</span>dk1.8.0_151<span class="symbol">\j</span>re<span class="symbol">\l</span>ib<span class="symbol">\e</span>xt<span class="symbol">\j</span>access.jar;C:<span class="symbol">\P</span>rogram Files<span class="symbol">\J</span>ava<span class="symbol">\j</span>dk1.8.0_151<span class="symbol">\j</span>re<span class="symbol">\l</span>ib<span class="symbol">\e</span>xt<span class="symbol">\j</span>fxrt.jar;C:<span class="symbol">\P</span>rogram Files<span class="symbol">\J</span>ava<span class="symbol">\j</span>dk1.8.0_151<span class="symbol">\j</span>re<span class="symbol">\l</span>ib<span class="symbol">\e</span>xt<span class="symbol">\l</span>ocaledata.jar;C:<span class="symbol">\P</span>rogram Files<span class="symbol">\J</span>ava<span class="symbol">\j</span>dk1.8.0_151<span class="symbol">\j</span>re<span class="symbol">\l</span>ib<span class="symbol">\e</span>xt<span class="symbol">\n</span>ashorn.jar;C:<span class="symbol">\P</span>rogram Files<span class="symbol">\J</span>ava<span class="symbol">\j</span>dk1.8.0_151<span class="symbol">\j</span>re<span class="symbol">\l</span>ib<span class="symbol">\e</span>xt<span class="symbol">\s</span>unec.jar;C:<span class="symbol">\P</span>rogram Files<span class="symbol">\J</span>ava<span class="symbol">\j</span>dk1.8.0_151<span class="symbol">\j</span>re<span class="symbol">\l</span>ib<span class="symbol">\e</span>xt<span class="symbol">\s</span>unjce_provider.jar;C:<span class="symbol">\P</span>rogram Files<span class="symbol">\J</span>ava<span class="symbol">\j</span>dk1.8.0_151<span class="symbol">\j</span>re<span class="symbol">\l</span>ib<span class="symbol">\e</span>xt<span class="symbol">\s</span>unmscapi.jar;C:<span class="symbol">\P</span>rogram Files<span class="symbol">\J</span>ava<span class="symbol">\j</span>dk1.8.0_151<span class="symbol">\j</span>re<span class="symbol">\l</span>ib<span class="symbol">\e</span>xt<span class="symbol">\s</span>unpkcs11.jar;C:<span class="symbol">\P</span>rogram Files<span class="symbol">\J</span>ava<span class="symbol">\j</span>dk1.8.0_151<span class="symbol">\j</span>re<span class="symbol">\l</span>ib<span class="symbol">\e</span>xt<span class="symbol">\z</span>ipfs.jar;C:<span class="symbol">\P</span>rogram Files<span class="symbol">\J</span>ava<span class="symbol">\j</span>dk1.8.0_151<span class="symbol">\j</span>re<span class="symbol">\l</span>ib<span class="symbol">\j</span>avaws.jar;C:<span class="symbol">\P</span>rogram Files<span class="symbol">\J</span>ava<span class="symbol">\j</span>dk1.8.0_151<span class="symbol">\j</span>re<span class="symbol">\l</span>ib<span class="symbol">\j</span>ce.jar;C:<span class="symbol">\P</span>rogram Files<span class="symbol">\J</span>ava<span class="symbol">\j</span>dk1.8.0_151<span class="symbol">\j</span>re<span class="symbol">\l</span>ib<span class="symbol">\j</span>fr.jar;C:<span class="symbol">\P</span>rogram Files<span class="symbol">\J</span>ava<span class="symbol">\j</span>dk1.8.0_151<span class="symbol">\j</span>re<span class="symbol">\l</span>ib<span class="symbol">\j</span>fxswt.jar;C:<span class="symbol">\P</span>rogram Files<span class="symbol">\J</span>ava<span class="symbol">\j</span>dk1.8.0_151<span class="symbol">\j</span>re<span class="symbol">\l</span>ib<span class="symbol">\j</span>sse.jar;C:<span class="symbol">\P</span>rogram Files<span class="symbol">\J</span>ava<span class="symbol">\j</span>dk1.8.0_151<span class="symbol">\j</span>re<span class="symbol">\l</span>ib<span class="symbol">\m</span>anagement-agent.jar;C:<span class="symbol">\P</span>rogram Files<span class="symbol">\J</span>ava<span class="symbol">\j</span>dk1.8.0_151<span class="symbol">\j</span>re<span class="symbol">\l</span>ib<span class="symbol">\p</span>lugin.jar;C:<span class="symbol">\P</span>rogram Files<span class="symbol">\J</span>ava<span class="symbol">\j</span>dk1.8.0_151<span class="symbol">\j</span>re<span class="symbol">\l</span>ib<span class="symbol">\r</span>esources.jar;C:<span class="symbol">\P</span>rogram Files<span class="symbol">\J</span>ava<span class="symbol">\j</span>dk1.8.0_151<span class="symbol">\j</span>re<span class="symbol">\l</span>ib<span class="symbol">\r</span>t.jar;E:<span class="symbol">\c</span>odes<span class="symbol">\j</span>ava<span class="symbol">\s</span>pring-boot-demo<span class="symbol">\t</span>arget<span class="symbol">\c</span>lasses;E:<span class="symbol">\m</span>aven_repos<span class="symbol">\o</span>rg<span class="symbol">\s</span>pringframework<span class="symbol">\b</span>oot<span class="symbol">\s</span>pring-boot-starter-web<span class="symbol">\1</span>.5.9.RELEASE<span class="symbol">\s</span>pring-boot-starter-web-1.5.9.RELEASE.jar;E:<span class="symbol">\m</span>aven_repos<span class="symbol">\o</span>rg<span class="symbol">\s</span>pringframework<span class="symbol">\b</span>oot<span class="symbol">\s</span>pring-boot-starter<span class="symbol">\1</span>.5.9.RELEASE<span class="symbol">\s</span>pring-boot-starter-1.5.9.RELEASE.jar;E:<span class="symbol">\m</span>aven_repos<span class="symbol">\o</span>rg<span class="symbol">\s</span>pringframework<span class="symbol">\b</span>oot<span class="symbol">\s</span>pring-boot<span class="symbol">\1</span>.5.9.RELEASE<span class="symbol">\s</span>pring-boot-1.5.9.RELEASE.jar;E:<span class="symbol">\m</span>aven_repos<span class="symbol">\o</span>rg<span class="symbol">\s</span>pringframework<span class="symbol">\b</span>oot<span class="symbol">\s</span>pring-boot-autoconfigure<span class="symbol">\1</span>.5.9.RELEASE<span class="symbol">\s</span>pring-boot-autoconfigure-1.5.9.RELEASE.jar;E:<span class="symbol">\m</span>aven_repos<span class="symbol">\o</span>rg<span class="symbol">\s</span>pringframework<span class="symbol">\b</span>oot<span class="symbol">\s</span>pring-boot-starter-logging<span class="symbol">\1</span>.5.9.RELEASE<span class="symbol">\s</span>pring-boot-starter-logging-1.5.9.RELEASE.jar;E:<span class="symbol">\m</span>aven_repos<span class="symbol">\c</span>h<span class="symbol">\q</span>os<span class="symbol">\l</span>ogback<span class="symbol">\l</span>ogback-classic<span class="symbol">\1</span>.1.11<span class="symbol">\l</span>ogback-classic-1.1.11.jar;E:<span class="symbol">\m</span>aven_repos<span class="symbol">\c</span>h<span class="symbol">\q</span>os<span class="symbol">\l</span>ogback<span class="symbol">\l</span>ogback-core<span class="symbol">\1</span>.1.11<span class="symbol">\l</span>ogback-core-1.1.11.jar;E:<span class="symbol">\m</span>aven_repos<span class="symbol">\o</span>rg<span class="symbol">\s</span>lf4j<span class="symbol">\s</span>lf4j-api<span class="symbol">\1</span>.7.25<span class="symbol">\s</span>lf4j-api-1.7.25.jar;E:<span class="symbol">\m</span>aven_repos<span class="symbol">\o</span>rg<span class="symbol">\s</span>lf4j<span class="symbol">\j</span>cl-over-slf4j<span class="symbol">\1</span>.7.25<span class="symbol">\j</span>cl-over-slf4j-1.7.25.jar;E:<span class="symbol">\m</span>aven_repos<span class="symbol">\o</span>rg<span class="symbol">\s</span>lf4j<span class="symbol">\j</span>ul-to-slf4j<span class="symbol">\1</span>.7.25<span class="symbol">\j</span>ul-to-slf4j-1.7.25.jar;E:<span class="symbol">\m</span>aven_repos<span class="symbol">\o</span>rg<span class="symbol">\s</span>lf4j<span class="symbol">\l</span>og4j-over-slf4j<span class="symbol">\1</span>.7.25<span class="symbol">\l</span>og4j-over-slf4j-1.7.25.jar;E:<span class="symbol">\m</span>aven_repos<span class="symbol">\o</span>rg<span class="symbol">\s</span>pringframework<span class="symbol">\s</span>pring-core<span class="symbol">\4</span>.3.13.RELEASE<span class="symbol">\s</span>pring-core-4.3.13.RELEASE.jar;E:<span class="symbol">\m</span>aven_repos<span class="symbol">\o</span>rg<span class="symbol">\y</span>aml<span class="symbol">\s</span>nakeyaml<span class="symbol">\1</span>.17<span class="symbol">\s</span>nakeyaml-1.17.jar;E:<span class="symbol">\m</span>aven_repos<span class="symbol">\o</span>rg<span class="symbol">\s</span>pringframework<span class="symbol">\b</span>oot<span class="symbol">\s</span>pring-boot-starter-tomcat<span class="symbol">\1</span>.5.9.RELEASE<span class="symbol">\s</span>pring-boot-starter-tomcat-1.5.9.RELEASE.jar;E:<span class="symbol">\m</span>aven_repos<span class="symbol">\o</span>rg<span class="symbol">\a</span>pache<span class="symbol">\t</span>omcat<span class="symbol">\e</span>mbed<span class="symbol">\t</span>omcat-embed-websocket<span class="symbol">\8</span>.5.23<span class="symbol">\t</span>omcat-embed-websocket-8.5.23.jar;E:<span class="symbol">\m</span>aven_repos<span class="symbol">\o</span>rg<span class="symbol">\h</span>ibernate<span class="symbol">\h</span>ibernate-validator<span class="symbol">\5</span>.3.6.Final<span class="symbol">\h</span>ibernate-validator-5.3.6.Final.jar;E:<span class="symbol">\m</span>aven_repos<span class="symbol">\j</span>avax<span class="symbol">\v</span>alidation<span class="symbol">\v</span>alidation-api<span class="symbol">\1</span>.1.0.Final<span class="symbol">\v</span>alidation-api-1.1.0.Final.jar;E:<span class="symbol">\m</span>aven_repos<span class="symbol">\o</span>rg<span class="symbol">\j</span>boss<span class="symbol">\l</span>ogging<span class="symbol">\j</span>boss-logging<span class="symbol">\3</span>.3.1.Final<span class="symbol">\j</span>boss-logging-3.3.1.Final.jar;E:<span class="symbol">\m</span>aven_repos<span class="symbol">\c</span>om<span class="symbol">\f</span>asterxml<span class="symbol">\c</span>lassmate<span class="symbol">\1</span>.3.4<span class="symbol">\c</span>lassmate-1.3.4.jar;E:<span class="symbol">\m</span>aven_repos<span class="symbol">\c</span>om<span class="symbol">\f</span>asterxml<span class="symbol">\j</span>ackson<span class="symbol">\c</span>ore<span class="symbol">\j</span>ackson-databind<span class="symbol">\2</span>.8.10<span class="symbol">\j</span>ackson-databind-2.8.10.jar;E:<span class="symbol">\m</span>aven_repos<span class="symbol">\c</span>om<span class="symbol">\f</span>asterxml<span class="symbol">\j</span>ackson<span class="symbol">\c</span>ore<span class="symbol">\j</span>ackson-annotations<span class="symbol">\2</span>.8.0<span class="symbol">\j</span>ackson-annotations-2.8.0.jar;E:<span class="symbol">\m</span>aven_repos<span class="symbol">\c</span>om<span class="symbol">\f</span>asterxml<span class="symbol">\j</span>ackson<span class="symbol">\c</span>ore<span class="symbol">\j</span>ackson-core<span class="symbol">\2</span>.8.10<span class="symbol">\j</span>ackson-core-2.8.10.jar;E:<span class="symbol">\m</span>aven_repos<span class="symbol">\o</span>rg<span class="symbol">\s</span>pringframework<span class="symbol">\s</span>pring-web<span class="symbol">\4</span>.3.13.RELEASE<span class="symbol">\s</span>pring-web-4.3.13.RELEASE.jar;E:<span class="symbol">\m</span>aven_repos<span class="symbol">\o</span>rg<span class="symbol">\s</span>pringframework<span class="symbol">\s</span>pring-aop<span class="symbol">\4</span>.3.13.RELEASE<span class="symbol">\s</span>pring-aop-4.3.13.RELEASE.jar;E:<span class="symbol">\m</span>aven_repos<span class="symbol">\o</span>rg<span class="symbol">\s</span>pringframework<span class="symbol">\s</span>pring-beans<span class="symbol">\4</span>.3.13.RELEASE<span class="symbol">\s</span>pring-beans-4.3.13.RELEASE.jar;E:<span class="symbol">\m</span>aven_repos<span class="symbol">\o</span>rg<span class="symbol">\s</span>pringframework<span class="symbol">\s</span>pring-context<span class="symbol">\4</span>.3.13.RELEASE<span class="symbol">\s</span>pring-context-4.3.13.RELEASE.jar;E:<span class="symbol">\m</span>aven_repos<span class="symbol">\o</span>rg<span class="symbol">\s</span>pringframework<span class="symbol">\s</span>pring-webmvc<span class="symbol">\4</span>.3.13.RELEASE<span class="symbol">\s</span>pring-webmvc-4.3.13.RELEASE.jar;E:<span class="symbol">\m</span>aven_repos<span class="symbol">\o</span>rg<span class="symbol">\s</span>pringframework<span class="symbol">\s</span>pring-expression<span class="symbol">\4</span>.3.13.RELEASE<span class="symbol">\s</span>pring-expression-4.3.13.RELEASE.jar;E:<span class="symbol">\m</span>aven_repos<span class="symbol">\j</span>avax<span class="symbol">\s</span>ervlet<span class="symbol">\j</span>stl<span class="symbol">\1</span>.2<span class="symbol">\j</span>stl-1.2.jar;E:<span class="symbol">\m</span>aven_repos<span class="symbol">\o</span>rg<span class="symbol">\a</span>pache<span class="symbol">\t</span>omcat<span class="symbol">\e</span>mbed<span class="symbol">\t</span>omcat-embed-core<span class="symbol">\8</span>.5.23<span class="symbol">\t</span>omcat-embed-core-8.5.23.jar;E:<span class="symbol">\m</span>aven_repos<span class="symbol">\o</span>rg<span class="symbol">\a</span>pache<span class="symbol">\t</span>omcat<span class="symbol">\t</span>omcat-annotations-api<span class="symbol">\8</span>.5.23<span class="symbol">\t</span>omcat-annotations-api-8.5.23.jar;E:<span class="symbol">\m</span>aven_repos<span class="symbol">\o</span>rg<span class="symbol">\a</span>pache<span class="symbol">\t</span>omcat<span class="symbol">\e</span>mbed<span class="symbol">\t</span>omcat-embed-el<span class="symbol">\8</span>.5.23<span class="symbol">\t</span>omcat-embed-el-8.5.23.jar" Application</span><br><span class="line"></span><br><span class="line">  .   ____          _            __ _ _</span><br><span class="line"> /<span class="symbol">\\</span> / ___'_ __ _ _(_)_ __  __ _ <span class="symbol">\ </span><span class="symbol">\ </span><span class="symbol">\ </span>\</span><br><span class="line">( ( )<span class="symbol">\_</span>__ | '_ | '_| | '_ <span class="symbol">\/</span> _` | <span class="symbol">\ </span><span class="symbol">\ </span><span class="symbol">\ </span>\</span><br><span class="line"> <span class="symbol">\\</span>/  ___)| |_)| | | | | || (_| |  ) ) ) )</span><br><span class="line">  '  |____| .__|_| |_|_| |_<span class="symbol">\_</span>_, | / / / /</span><br><span class="line"> =========|_|==============|___/=/_/_/_/</span><br><span class="line"> :: Spring Boot ::        (v1.5.9.RELEASE)</span><br><span class="line"></span><br><span class="line">2017-12-18 11:49:38.689  INFO 11064 --- [           main] Application                              : Starting Application on USER-20170427SG with PID 11064 (E:<span class="symbol">\c</span>odes<span class="symbol">\j</span>ava<span class="symbol">\s</span>pring-boot-demo<span class="symbol">\t</span>arget<span class="symbol">\c</span>lasses started by Administrator in E:<span class="symbol">\c</span>odes<span class="symbol">\j</span>ava<span class="symbol">\s</span>pring-boot-demo)</span><br><span class="line">2017-12-18 11:49:38.692  INFO 11064 --- [           main] Application                              : No active profile set, falling back to default profiles: default</span><br><span class="line">2017-12-18 11:49:38.753  INFO 11064 --- [           main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3bd94634: startup date [Mon Dec 18 11:49:38 CST 2017]; root of context hierarchy</span><br><span class="line">2017-12-18 11:49:40.329  INFO 11064 --- [           main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)</span><br><span class="line">2017-12-18 11:49:40.339  INFO 11064 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]</span><br><span class="line">2017-12-18 11:49:40.340  INFO 11064 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.23</span><br><span class="line">2017-12-18 11:49:40.435  INFO 11064 --- [ost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext</span><br><span class="line">2017-12-18 11:49:40.435  INFO 11064 --- [ost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1685 ms</span><br><span class="line">2017-12-18 11:49:40.550  INFO 11064 --- [ost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]</span><br><span class="line">2017-12-18 11:49:40.554  INFO 11064 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]</span><br><span class="line">2017-12-18 11:49:40.554  INFO 11064 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]</span><br><span class="line">2017-12-18 11:49:40.554  INFO 11064 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]</span><br><span class="line">2017-12-18 11:49:40.554  INFO 11064 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]</span><br><span class="line">2017-12-18 11:49:40.833  INFO 11064 --- [           main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3bd94634: startup date [Mon Dec 18 11:49:38 CST 2017]; root of context hierarchy</span><br><span class="line">2017-12-18 11:49:40.901  INFO 11064 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "&#123;[/jsp/index.do]&#125;" onto public java.lang.String me.chilam.web.JspController.execute()</span><br><span class="line">2017-12-18 11:49:40.903  INFO 11064 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "&#123;[/error]&#125;" onto public org.springframework.http.ResponseEntity&lt;java.util.Map&lt;java.lang.String, java.lang.Object&gt;&gt; org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)</span><br><span class="line">2017-12-18 11:49:40.904  INFO 11064 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "&#123;[/error],produces=[text/html]&#125;" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)</span><br><span class="line">2017-12-18 11:49:40.930  INFO 11064 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/hello/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]</span><br><span class="line">2017-12-18 11:49:40.930  INFO 11064 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]</span><br><span class="line">2017-12-18 11:49:40.930  INFO 11064 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]</span><br><span class="line">2017-12-18 11:49:40.975  INFO 11064 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]</span><br><span class="line">2017-12-18 11:49:41.086  INFO 11064 --- [           main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup</span><br><span class="line">2017-12-18 11:49:41.136  INFO 11064 --- [           main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)</span><br><span class="line">2017-12-18 11:49:41.140  INFO 11064 --- [           main] Application                              : Started Application in 2.737 seconds (JVM running for 3.146)</span><br></pre></td></tr></table></figure><p>从上图可以看到，日志输出内容元素具体如下：</p><ul><li>时间日期：精确到毫秒</li><li>日志级别：ERROR, WARN, INFO, DEBUG or TRACE</li><li>进程ID</li><li>分隔符：— 标识实际日志的开始</li><li>线程名：方括号括起来（可能会截断控制台输出）</li><li>Logger名：通常使用源代码的类名</li><li>日志内容</li></ul><h3 id="控制台输出日志"><a href="#控制台输出日志" class="headerlink" title="控制台输出日志"></a>控制台输出日志</h3><p>日志级别从低到高分为TRACE &lt; DEBUG &lt; INFO &lt; WARN &lt; ERROR &lt; FATAL，如果设置为WARN，则低于WARN的信息都不会输出。</p><p>在application.properties中配置debug=true，该属性置为true的时候，核心Logger（包含嵌入式容器、hibernate、spring）<br>会输出更多内容，但是你自己应用的日志并不会输出为DEBUG级别。</p><h3 id="文件输出"><a href="#文件输出" class="headerlink" title="文件输出"></a>文件输出</h3><p>默认情况下，Spring Boot将日志输出到控制台，不会写到日志文件。如果要编写除控制台输出之外的日志文件，<br>则需在application.properties中设置logging.file或logging.path属性。</p><ul><li>logging.file，设置文件，可以是绝对路径，也可以是相对路径。如：logging.file=my.log</li><li>logging.path，设置目录，会在该目录下创建spring.log文件，并写入日志内容，如：logging.path=/var/log</li></ul><p>如果只配置 logging.file，会在项目的当前路径下生成一个 xxx.log 日志文件。<br>如果只配置 logging.path，在 /var/log文件夹生成一个日志文件为 spring.log</p><p><strong>注：二者不能同时使用，如若同时使用，则只有logging.file生效</strong></p><p>默认情况下，日志文件的大小达到10MB时会切分一次，产生新的日志文件，默认级别为：ERROR、WARN、INFO</p><h3 id="级别控制"><a href="#级别控制" class="headerlink" title="级别控制"></a>级别控制</h3><p>所有支持的日志记录系统都可以在Spring Boot环境中设置记录级别（例如在application.properties中）<br>格式为：’logging.level.* = LEVEL’</p><ul><li>logging.level：日志级别控制前缀，*为包名或Logger名</li><li>LEVEL：选项TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置org.springframework的日志级别为WARN</span></span><br><span class="line">logging.level.org.<span class="attribute">springframework</span>=WARN</span><br></pre></td></tr></table></figure><h3 id="自定义日志配置"><a href="#自定义日志配置" class="headerlink" title="自定义日志配置"></a>自定义日志配置</h3><p>常见的日志有很多种方式，根据不同的日志系统，可以按照规则组织配置文件名，就能被正确加载：</p><ul><li>Logback：logback-spring.xml, logback-spring.groovy, logback.xml, logback.groovy</li><li>Log4j：log4j-spring.properties, log4j-spring.xml, log4j.properties, log4j.xml</li><li>Log4j2：log4j2-spring.xml, log4j2.xml</li><li>JDK (Java Util Logging)：logging.properties</li></ul><p>Spring Boot官方推荐优先使用带有-spring的文件名作为你的日志配置（如使用logback-spring.xml，而不是logback.xml），<br>命名为logback-spring.xml的日志配置文件，spring boot可以为它添加一些spring boot特有的配置项（下面会提到）。</p><p>上面是默认的命名规则，并且放在src/main/resources下面即可。</p><p>如果你即想完全掌控日志配置，但又不想用logback.xml作为Logback配置的名字，<br>可以在application.properties配置文件里面通过logging.config属性指定自定义的名字：</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">logging.<span class="built_in">config</span>=classpath:logging-<span class="built_in">config</span>.xml</span><br></pre></td></tr></table></figure><p>关于logback的配置的介绍，这里就不再做多余的介绍，请参考的logback的官网的文档</p>]]></content>
    
    <summary type="html">
    
      默认日志配置，自定义日志配置
    
    </summary>
    
      <category term="搬砖" scheme="http://chilam.me/categories/%E6%90%AC%E7%A0%96/"/>
    
    
      <category term="spring-boot" scheme="http://chilam.me/tags/spring-boot/"/>
    
  </entry>
  
  <entry>
    <title>3.sb-web开发</title>
    <link href="http://chilam.me/2017/12/17/spring-boot-3/"/>
    <id>http://chilam.me/2017/12/17/spring-boot-3/</id>
    <published>2017-12-17T01:00:03.000Z</published>
    <updated>2018-06-30T10:05:00.264Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Spring Boot提供了spring-boot-starter-web为Web开发予以支持，<br>spring-boot-starter-web为我们提供了嵌入的Tomcat以及Spring MVC的依赖。</p><h2 id="Spring-MVC的自动配置"><a href="#Spring-MVC的自动配置" class="headerlink" title="Spring MVC的自动配置"></a>Spring MVC的自动配置</h2><p>Spring Boot为Spring MVC提供适用于多数应用的自动配置功能。在Spring默认基础上，自动配置添加了以下特性：</p><ul><li>引入ContentNegotiatingViewResolver和BeanNameViewResolver beans。</li><li>对静态资源的支持，包括对WebJars的支持。</li><li>自动注册Converter，GenericConverter，Formatter beans。</li><li>对HttpMessageConverters的支持。</li><li>自动注册MessageCodeResolver。</li><li>对静态index.html的支持。</li><li>对自定义Favicon的支持。</li></ul><p>如果想全面控制Spring MVC，你可以添加自己的@Configuration，并使用@EnableWebMvc对其注解。如果想保留Spring Boot MVC的特性，<br>并只是添加其他的MVC配置(拦截器，formatters，视图控制器等)，你可以添加自己的WebMvcConfigurerAdapter类型的@Bean<br>（不使用@EnableWebMvc注解）,具体拦截器等配置后续会介绍</p><h2 id="静态资源访问"><a href="#静态资源访问" class="headerlink" title="静态资源访问"></a>静态资源访问</h2><p>Spring Boot 默认为我们提供了静态资源处理，使用 WebMvcAutoConfiguration 中的配置各种属性。<br>建议大家使用Spring Boot的默认配置方式，提供的静态资源映射如下:</p><p>classpath:/META-INF/resources<br>classpath:/resources<br>classpath:/static<br>classpath:/public</p><p>上面这几个都是静态资源的映射路径，优先级顺序为：META-INF/resources &gt; resources &gt; static &gt; public</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 默认值为 /**</span></span><br><span class="line">spring.mvc.<span class="keyword">static</span>-path-pattern=</span><br><span class="line"><span class="meta"># 默认值为 classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/</span></span><br><span class="line">spring.resources.<span class="keyword">static</span>-locations=这里设置要指向的路径，多个使用英文逗号隔开</span><br></pre></td></tr></table></figure><p>可以通过修改spring.mvc.static-path-pattern来修改默认的映射，例如我改成/chilam/**,那运行的时候访问<br><a href="http://lcoalhost:8080/chilam/index.html" target="_blank" rel="noopener">http://lcoalhost:8080/chilam/index.html</a> 才对应到index.html页面。</p><h2 id="模板引擎-Thymeleaf"><a href="#模板引擎-Thymeleaf" class="headerlink" title="模板引擎-Thymeleaf"></a>模板引擎-Thymeleaf</h2><p>官方推荐的！！！！</p><p>Thymeleaf是一款用于渲染XML/XHTML/HTML5内容的模板引擎。类似JSP，Velocity，FreeMaker等，它也可以轻易的与Spring MVC等<br>Web框架进行集成作为Web应用的模板引擎。与其它模板引擎相比，<br>Thymeleaf最大的特点是能够直接在浏览器中打开并正确显示模板页面，而不需要启动整个Web应用。它的功能特性如下：</p><ul><li>Spring MVC中@Controller中的方法可以直接返回模板名称，接下来Thymeleaf模板引擎会自动进行渲染</li><li>模板中的表达式支持Spring表达式语言（Spring EL)</li><li>表单支持，并兼容Spring MVC的数据绑定与验证机制</li><li>国际化支持</li></ul><h3 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>spring-boot-starter-thymeleaf会自动包含spring-boot-starter-web，所以我们就不需要单独引入web依赖了。</p><h3 id="编写控制器"><a href="#编写控制器" class="headerlink" title="编写控制器"></a>编写控制器</h3><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">@RestController</span><br><span class="line">@RequestMapping(<span class="string">"/leaf"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ThymeleafController</span> &#123;</span><br><span class="line"></span><br><span class="line">    @RequestMapping(<span class="string">"/index"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">index</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        List&lt;String&gt; stringList = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">        stringList.<span class="keyword">add</span>(<span class="string">"设计1"</span>);</span><br><span class="line">        stringList.<span class="keyword">add</span>(<span class="string">"设计2"</span>);</span><br><span class="line">        stringList.<span class="keyword">add</span>(<span class="string">"设计3"</span>);</span><br><span class="line">        stringList.<span class="keyword">add</span>(<span class="string">"设计4"</span>);</span><br><span class="line">        stringList.<span class="keyword">add</span>(<span class="string">"设计5"</span>);</span><br><span class="line">        ModelAndView modelAndView = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">        modelAndView.setViewName(<span class="string">"index"</span>);</span><br><span class="line">        modelAndView.addObject(<span class="string">"stringList"</span>,stringList);</span><br><span class="line">        <span class="keyword">return</span> modelAndView;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="编写HTML"><a href="#编写HTML" class="headerlink" title="编写HTML"></a>编写HTML</h3><p>引入依赖后就在默认的模板路径src/main/resources/templates下编写模板文件即可完成。这里我们新建一个index.html:</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE html&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">"http://www.thymeleaf.org"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>learn Resources<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=UTF-8"</span> /&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>sssss<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:each</span>=<span class="string">"str : $</span></span></span><span class="template-variable">&#123;stringList&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:text</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;str&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="开发jsp页面"><a href="#开发jsp页面" class="headerlink" title="开发jsp页面"></a>开发jsp页面</h2><p>首先确定jsp文件存放目录src/main/webapp/WEB-INF/jsp/，通过设置</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">spring<span class="selector-class">.mvc</span><span class="selector-class">.view</span><span class="selector-class">.prefix</span>=/WEB-INF/jsp/</span><br><span class="line">spring<span class="selector-class">.mvc</span><span class="selector-class">.view</span><span class="selector-class">.suffix</span>=.jsp</span><br></pre></td></tr></table></figure><h3 id="更改SpringMVC-DispatcherServlet的配置UrlMapping的值"><a href="#更改SpringMVC-DispatcherServlet的配置UrlMapping的值" class="headerlink" title="更改SpringMVC DispatcherServlet的配置UrlMapping的值"></a>更改SpringMVC DispatcherServlet的配置UrlMapping的值</h3><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">server.servlet-<span class="built_in">path</span>=*.<span class="keyword">do</span></span><br></pre></td></tr></table></figure><h3 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--jsp页面使用jstl标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--用于编译jsp--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.embed<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat-embed-jasper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="编写控制器-1"><a href="#编写控制器-1" class="headerlink" title="编写控制器"></a>编写控制器</h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(<span class="meta-string">"jsp"</span>)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JspController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(<span class="meta-string">"index.do"</span>)</span></span><br><span class="line">    <span class="keyword">public</span> String execute()&#123;</span><br><span class="line">        System.err.println(<span class="string">"hello jsp"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"index"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="编写页面"><a href="#编写页面" class="headerlink" title="编写页面"></a>编写页面</h3><p>注意页面存放的路径:spring-boot-demo\src\main\webapp\WEB-INF\jsp\index.jsp</p><figure class="highlight erb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> </span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml">    测试JSP</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="测试JSP"><a href="#测试JSP" class="headerlink" title="测试JSP"></a>测试JSP</h3><p>此时注意前面的依赖:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--用于编译jsp--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.embed<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat-embed-jasper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="provided"><a href="#provided" class="headerlink" title="provided"></a><scope>provided</scope></h4><p>依赖范围就是用来控制依赖和三种classpath(编译classpath，测试classpath、运行classpath)的关系，Maven有如下几种依赖范围：</p><ul><li><p>compile:编译依赖范围。如果没有指定，就会默认使用该依赖范围。使用此依赖范围的Maven依赖，对于编译、测试、运行三种classpath<br>都有效。典型的例子是spring-code,在编译、测试和运行的时候都需要使用该依赖。</p></li><li><p>test: 测试依赖范围。使用次依赖范围的Maven依赖，只对于测试classpath有效，在编译主代码或者运行项目的使用时将无法使用此依赖。<br>典型的例子是Jnuit,它只有在编译测试代码及运行测试的时候才需要。</p></li><li><p>provided:已提供依赖范围。使用此依赖范围的Maven依赖，对于编译和测试classpath有效，但在运行时候无效。<br>典型的例子是servlet-api,编译和测试项目的时候需要该依赖，但在运行项目的时候，由于容器以及提供，就不需要Maven重复地引入一遍。</p></li></ul><h4 id="在上述测试案例中有provided的时候"><a href="#在上述测试案例中有provided的时候" class="headerlink" title="在上述测试案例中有provided的时候"></a>在上述测试案例中有provided的时候</h4><ul><li>右键运行启动类，访问<a href="http://localhost:8080/jsp/index.do如下图：" target="_blank" rel="noopener">http://localhost:8080/jsp/index.do如下图：</a></li></ul><p><img src="http://orkt468tj.bkt.clouddn.com/17-12-18/94884658.jpg" alt=""></p><ul><li><p>使用spring-boot:run运行正常</p></li><li><p>打包成jar，通过 java -jar spring-boot-demo-1.0-SNAPSHOT.jar运行404找不到页面(index.jsp没有被打包到jar包里)</p></li><li><p>修改pom.xml的packaging为war打包成war，通过 java -jar spring-boot-demo-1.0-SNAPSHOT.war运行正常</p></li></ul><h4 id="在上述测试案例中没有provided的时候"><a href="#在上述测试案例中没有provided的时候" class="headerlink" title="在上述测试案例中没有provided的时候"></a>在上述测试案例中没有provided的时候</h4><ul><li><p>右键运行启动类，访问页面正常</p></li><li><p>spring-boot:run运行 访问页面正常</p></li><li><p>打包成jar，通过 java -jar spring-boot-demo-1.0-SNAPSHOT.jar 运行报错</p></li><li><p>打包成war，通过 java -jar spring-boot-demo-1.0-SNAPSHOT.war 运行正常</p></li></ul><h3 id="外部Tomcat容器部署Spring-Boot应用"><a href="#外部Tomcat容器部署Spring-Boot应用" class="headerlink" title="外部Tomcat容器部署Spring Boot应用"></a>外部Tomcat容器部署Spring Boot应用</h3><p>在前面的Spring Boot应用都是内置了tomcat容器，如果把打好的war包拿去部署到外部tomcat的话，会报错的，需要做如下的改动</p><h4 id="继承SpringBootServletInitializer"><a href="#继承SpringBootServletInitializer" class="headerlink" title="继承SpringBootServletInitializer"></a>继承SpringBootServletInitializer</h4><p>外部容器部署的话，就不能依赖于Application的main函数了，而是要以类似于web.xml文件配置的方式来启动Spring应用上下文，<br>此时我们需要在启动类中继承SpringBootServletInitializer并实现configure方法：</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.<span class="type">SpringBootApplication</span>;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.builder.<span class="type">SpringApplicationBuilder</span>;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.support.<span class="type">SpringBootServletInitializer</span>;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.<span class="type">ComponentScan</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@ComponentScan</span>(basePackages = &#123;<span class="string">"me.chilam.**"</span>&#125;)</span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">Application</span> <span class="keyword">extends</span> <span class="title">SpringBootServletInitializer</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">SpringApplicationBuilder</span> configure(<span class="type">SpringApplicationBuilder</span> builder) &#123;</span><br><span class="line">        <span class="keyword">return</span> builder.sources(<span class="type">Application</span>.<span class="keyword">class</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个类的作用与在web.xml中配置负责初始化Spring应用上下文的监听器作用类似，只不过在这里不需要编写额外的XML文件了。</p><h4 id="pom-xml修改tomcat相关的配置"><a href="#pom-xml修改tomcat相关的配置" class="headerlink" title="pom.xml修改tomcat相关的配置"></a>pom.xml修改tomcat相关的配置</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>me.chilam<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>Maven Quick Start Archetype<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.apache.org<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 外部部署不需要内嵌tomcat --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-tomcat<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--jsp页面使用jstl标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--用于编译jsp--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.embed<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat-embed-jasper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>spring-boot<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 需要注释掉，不然要报Applicatipon.java中找不到main方法</span></span><br><span class="line"><span class="comment">&lt;plugins&gt;</span></span><br><span class="line"><span class="comment">  &lt;plugin&gt;</span></span><br><span class="line"><span class="comment">  &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span></span><br><span class="line"><span class="comment">  &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span></span><br><span class="line"><span class="comment">  &lt;/plugin&gt;</span></span><br><span class="line"><span class="comment">  &lt;/plugins&gt;</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>访问路径:<a href="http://localhost:8080/spring-boot/jsp/index.do" target="_blank" rel="noopener">http://localhost:8080/spring-boot/jsp/index.do</a></p><h2 id="替换Spring-Boot的Spring-MVC配置"><a href="#替换Spring-Boot的Spring-MVC配置" class="headerlink" title="替换Spring Boot的Spring MVC配置"></a>替换Spring Boot的Spring MVC配置</h2><p>如果Spring Boot提供的Sping MVC不符合要求，则可以通过一个配置类（注解有@Configuration的类）<br>加上@EnableWebMvc注解来实现完全自己控制的MVC配置。</p><p><a href="https://docs.spring.io/spring/docs/4.3.14.BUILD-SNAPSHOT/spring-framework-reference/htmlsingle/#mvc-config" target="_blank" rel="noopener">Spring MVC官网配置文档</a></p><p>当然，通常情况下，Spring Boot的自动配置是符合我们大多数需求的。在你既需要保留Spring Boot提供的便利，<br>有需要增加自己的额外的配置的时候，可以定义一个配置类并继承WebMvcConfigurerAdapter,无需使用@EnableWebMvc注解。</p><h3 id="自定义配置Web-MVC类"><a href="#自定义配置Web-MVC类" class="headerlink" title="自定义配置Web MVC类"></a>自定义配置Web MVC类</h3><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.<span class="type">Configuration</span>;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.<span class="type">ResourceHandlerRegistry</span>;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.<span class="type">WebMvcConfigurerAdapter</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">MyWebMvcConfigurerAdapter</span> <span class="keyword">extends</span> <span class="title">WebMvcConfigurerAdapter</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 配置静态访问资源</span></span><br><span class="line"><span class="comment">     * @param registry</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public void addResourceHandlers(<span class="type">ResourceHandlerRegistry</span> registry) &#123;</span><br><span class="line">        registry.addResourceHandler(<span class="string">"/hello/**"</span>).addResourceLocations(<span class="string">"classpath:/hello/"</span>);</span><br><span class="line">        <span class="keyword">super</span>.addResourceHandlers(registry);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="启动类需要使用-Import引入"><a href="#启动类需要使用-Import引入" class="headerlink" title="启动类需要使用@Import引入"></a>启动类需要使用@Import引入</h3><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@SpringBootApplication</span></span><br><span class="line"><span class="variable">@ComponentScan</span>(basePackages = &#123;<span class="string">"me.chilam.**"</span>&#125;)</span><br><span class="line"><span class="variable">@Import</span>(&#123;MyWebMvcConfigurerAdapter.class&#125;)</span><br><span class="line">public class Application&#123;</span><br><span class="line">    <span class="selector-tag">public</span> <span class="selector-tag">static</span> <span class="selector-tag">void</span> <span class="selector-tag">main</span>(String[] args) &#123;</span><br><span class="line">        <span class="selector-tag">SpringApplication</span><span class="selector-class">.run</span>(Application.class,args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="自定义拦截器"><a href="#自定义拦截器" class="headerlink" title="自定义拦截器"></a>自定义拦截器</h3><ul><li>编写拦截器类</li></ul><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> me.chilam.interceptor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.HandlerInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyInterceptor</span> <span class="keyword">implements</span> <span class="title">HandlerInterceptor</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object <span class="keyword">handler</span>)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        System.err.println(<span class="string">"preHandle"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">postHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object <span class="keyword">handler</span>, ModelAndView modelAndView)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        System.err.println(<span class="string">"postHandle"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">afterCompletion</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object <span class="keyword">handler</span>, Exception ex)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>拦截器配置:</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">me</span><span class="selector-class">.chilam</span><span class="selector-class">.interceptor</span><span class="selector-class">.MyInterceptor</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.context</span><span class="selector-class">.annotation</span><span class="selector-class">.Configuration</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.web</span><span class="selector-class">.servlet</span><span class="selector-class">.config</span><span class="selector-class">.annotation</span><span class="selector-class">.InterceptorRegistry</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.web</span><span class="selector-class">.servlet</span><span class="selector-class">.config</span><span class="selector-class">.annotation</span><span class="selector-class">.ResourceHandlerRegistry</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.web</span><span class="selector-class">.servlet</span><span class="selector-class">.config</span><span class="selector-class">.annotation</span><span class="selector-class">.WebMvcConfigurerAdapter</span>;</span><br><span class="line"></span><br><span class="line">@<span class="keyword">Configuration</span></span><br><span class="line"><span class="keyword">public</span> class MyWebMvcConfigurerAdapter extends WebMvcConfigurerAdapter &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加自定义拦截器</span></span><br><span class="line"><span class="comment">     * @param registry</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    @<span class="keyword">Override</span></span><br><span class="line">    public void addInterceptors(InterceptorRegistry registry) &#123;</span><br><span class="line">        <span class="selector-tag">registry</span><span class="selector-class">.addInterceptor</span>((<span class="selector-tag">new</span> <span class="selector-tag">MyInterceptor</span>()))<span class="selector-class">.addPathPatterns</span>("<span class="comment">/**");</span></span><br><span class="line"><span class="comment">        super.addInterceptors(registry);</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="查看父类方法WebMvcConfigurerAdapter"><a href="#查看父类方法WebMvcConfigurerAdapter" class="headerlink" title="查看父类方法WebMvcConfigurerAdapter"></a>查看父类方法WebMvcConfigurerAdapter</h3><p>自定义配置Web MVC需要继承WebMvcConfigurerAdapter，熟悉Web MVC配置的看了这个类方法其实也就明白以后需要自定义的配置该如何<br>添加了。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Copyright 2002-2016 the original author or authors.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Licensed under the Apache License, Version 2.0 (the "License");</span></span><br><span class="line"><span class="comment"> * you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment"> * You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *      http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"> * distributed under the License is distributed on an "AS IS" BASIS,</span></span><br><span class="line"><span class="comment"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"> * See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"> * limitations under the License.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">package</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.web</span><span class="selector-class">.servlet</span><span class="selector-class">.config</span><span class="selector-class">.annotation</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">java</span><span class="selector-class">.util</span><span class="selector-class">.List</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.format</span><span class="selector-class">.FormatterRegistry</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.http</span><span class="selector-class">.converter</span><span class="selector-class">.HttpMessageConverter</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.validation</span><span class="selector-class">.MessageCodesResolver</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.validation</span><span class="selector-class">.Validator</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.web</span><span class="selector-class">.method</span><span class="selector-class">.support</span><span class="selector-class">.HandlerMethodArgumentResolver</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.web</span><span class="selector-class">.method</span><span class="selector-class">.support</span><span class="selector-class">.HandlerMethodReturnValueHandler</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.web</span><span class="selector-class">.servlet</span><span class="selector-class">.HandlerExceptionResolver</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * An implementation of &#123;@link WebMvcConfigurer&#125; with empty methods allowing</span></span><br><span class="line"><span class="comment"> * subclasses to override only the methods they're interested in.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @author Rossen Stoyanchev</span></span><br><span class="line"><span class="comment"> * @since 3.1</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="selector-tag">public</span> <span class="selector-tag">abstract</span> <span class="selector-tag">class</span> <span class="selector-tag">WebMvcConfigurerAdapter</span> <span class="selector-tag">implements</span> <span class="selector-tag">WebMvcConfigurer</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &#123;@inheritDoc&#125;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;This implementation is empty.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable">@Override</span></span><br><span class="line">public void configurePathMatch(PathMatchConfigurer configurer) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &#123;@inheritDoc&#125;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;This implementation is empty.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable">@Override</span></span><br><span class="line">public void configureContentNegotiation(ContentNegotiationConfigurer configurer) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &#123;@inheritDoc&#125;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;This implementation is empty.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable">@Override</span></span><br><span class="line">public void configureAsyncSupport(AsyncSupportConfigurer configurer) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &#123;@inheritDoc&#125;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;This implementation is empty.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable">@Override</span></span><br><span class="line">public void configureDefaultServletHandling(DefaultServletHandlerConfigurer configurer) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &#123;@inheritDoc&#125;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;This implementation is empty.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable">@Override</span></span><br><span class="line">public void addFormatters(FormatterRegistry registry) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &#123;@inheritDoc&#125;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;This implementation is empty.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable">@Override</span></span><br><span class="line">public void addInterceptors(InterceptorRegistry registry) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &#123;@inheritDoc&#125;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;This implementation is empty.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable">@Override</span></span><br><span class="line">public void addResourceHandlers(ResourceHandlerRegistry registry) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &#123;@inheritDoc&#125;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;This implementation is empty.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable">@Override</span></span><br><span class="line">public void addCorsMappings(CorsRegistry registry) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &#123;@inheritDoc&#125;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;This implementation is empty.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable">@Override</span></span><br><span class="line">public void addViewControllers(ViewControllerRegistry registry) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &#123;@inheritDoc&#125;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;This implementation is empty.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable">@Override</span></span><br><span class="line">public void configureViewResolvers(ViewResolverRegistry registry) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &#123;@inheritDoc&#125;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;This implementation is empty.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable">@Override</span></span><br><span class="line">public void addArgumentResolvers(List&lt;HandlerMethodArgumentResolver&gt; argumentResolvers) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &#123;@inheritDoc&#125;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;This implementation is empty.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable">@Override</span></span><br><span class="line">public void addReturnValueHandlers(List&lt;HandlerMethodReturnValueHandler&gt; returnValueHandlers) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &#123;@inheritDoc&#125;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;This implementation is empty.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable">@Override</span></span><br><span class="line">public void configureMessageConverters(List&lt;HttpMessageConverter&lt;?&gt;&gt; converters) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &#123;@inheritDoc&#125;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;This implementation is empty.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable">@Override</span></span><br><span class="line">public void extendMessageConverters(List&lt;HttpMessageConverter&lt;?&gt;&gt; converters) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &#123;@inheritDoc&#125;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;This implementation is empty.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable">@Override</span></span><br><span class="line">public void configureHandlerExceptionResolvers(List&lt;HandlerExceptionResolver&gt; exceptionResolvers) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &#123;@inheritDoc&#125;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;This implementation is empty.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable">@Override</span></span><br><span class="line">public void extendHandlerExceptionResolvers(List&lt;HandlerExceptionResolver&gt; exceptionResolvers) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &#123;@inheritDoc&#125;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;This implementation returns &#123;@code null&#125;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable">@Override</span></span><br><span class="line">public Validator getValidator() &#123;</span><br><span class="line"><span class="selector-tag">return</span> <span class="selector-tag">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &#123;@inheritDoc&#125;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;This implementation returns &#123;@code null&#125;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">@<span class="selector-tag">Override</span></span><br><span class="line"><span class="selector-tag">public</span> <span class="selector-tag">MessageCodesResolver</span> <span class="selector-tag">getMessageCodesResolver</span>() &#123;</span><br><span class="line"><span class="selector-tag">return</span> <span class="selector-tag">null</span>;</span><br><span class="line">&#125;&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Spring Boot推荐模板引擎，以及JSP页面开发，Spring MVC的配置
    
    </summary>
    
      <category term="搬砖" scheme="http://chilam.me/categories/%E6%90%AC%E7%A0%96/"/>
    
    
      <category term="spring-boot" scheme="http://chilam.me/tags/spring-boot/"/>
    
  </entry>
  
  <entry>
    <title>2.sb-配置</title>
    <link href="http://chilam.me/2017/12/17/spring-boot-2/"/>
    <id>http://chilam.me/2017/12/17/spring-boot-2/</id>
    <published>2017-12-17T01:00:02.000Z</published>
    <updated>2018-06-30T10:05:00.264Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>了解Spring Boot的入门，知道了Spring Boot使用“习惯优于配置”（项目中存在大量的配置，此外还内置了一个习惯性的配置，<br>让你无需手动进行配置）的理念让你的项目快速运行起来。所以，我们要想把Spring Boot玩的溜，就要懂得如何开启各个功能模块的<br>默认配置，这就需要了解Spring Boot的配置文件application.properties。</p><p>Spring Boot使用了一个全局的配置文件application.properties，放在src/main/resources目录下或者类路径的/config下。<br>Sping Boot的全局配置文件的作用是对一些默认配置的配置值进行修改。</p><h2 id="自定义属性"><a href="#自定义属性" class="headerlink" title="自定义属性"></a>自定义属性</h2><h3 id="自定义属性-Value"><a href="#自定义属性-Value" class="headerlink" title="自定义属性@Value"></a>自定义属性@Value</h3><p>application.properties提供自定义属性的支持，这样我们就可以把一些常量配置在这里</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="attribute">name</span>=设计</span><br><span class="line">app.<span class="attribute">version</span>=1.0.0</span><br></pre></td></tr></table></figure><p>然后直接在要使用的地方通过注解@Value(value=”${config.name}”)就可以绑定到你想要的属性上面</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Example</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(<span class="meta-string">"<span class="subst">$&#123;app.name&#125;</span>"</span>)</span></span><br><span class="line">    <span class="keyword">private</span> String appName;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(<span class="meta-string">"<span class="subst">$&#123;app.version&#125;</span>"</span>)</span></span><br><span class="line">    <span class="keyword">private</span> String appVersion;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(<span class="meta-string">"/"</span>)</span></span><br><span class="line">    String home()&#123;</span><br><span class="line">        <span class="keyword">return</span> appName +<span class="string">","</span>+appVersion;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> static void main(String[] args) &#123;</span><br><span class="line">        SpringApplication.run(Example.<span class="keyword">class</span>,args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>IDEA中properties文件乱码解决如下</strong></p><p><img src="http://orkt468tj.bkt.clouddn.com/17-12-15/74717395.jpg" alt=""></p><h3 id="自定义属性-ConfigurationProperties"><a href="#自定义属性-ConfigurationProperties" class="headerlink" title="自定义属性@ConfigurationProperties"></a>自定义属性@ConfigurationProperties</h3><p>有时候属性太多了，一个个绑定到属性字段上太多，官方提倡绑定一个对象的bean，这里我们建一个AppConfig.java类，<br>顶部需要使用注解@ConfigurationProperties(prefix = “app”)来指明使用哪个</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> me.chilam.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="comment">//使用注解，并声明统一前缀</span></span><br><span class="line">@ConfigurationProperties(prefix = <span class="string">"app"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppConfig</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//对应app.name</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> name;</span><br><span class="line">    <span class="comment">//对应app.version</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> version;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//getter setter</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="comment">//加入配置的类</span></span><br><span class="line"><span class="meta">@EnableConfigurationProperties</span>(&#123;AppConfig.<span class="keyword">class</span>&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Example</span> &#123;</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">//注入配置类</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AppConfig appConfig;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/"</span>)</span><br><span class="line">    String home()&#123;</span><br><span class="line">        <span class="keyword">return</span> appConfig.getName()+<span class="string">", "</span>+appConfig.getVersion();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(String[] args) &#123;</span><br><span class="line">        SpringApplication.run(Example.<span class="keyword">class</span>,args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="属性间的引用"><a href="#属性间的引用" class="headerlink" title="属性间的引用"></a>属性间的引用</h3><p>在application.properties中的各个属性之间也可以直接引用来使用，就像下面的设置：</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">app</span>.name=设计</span><br><span class="line"><span class="keyword">app</span>.<span class="keyword">version</span>=1.2.0</span><br><span class="line"><span class="keyword">app</span>.description=<span class="keyword">App</span>的名字为<span class="variable">$&#123;app</span>.name&#125;,当前版本<span class="variable">$&#123;app</span>.<span class="keyword">version</span>&#125;</span><br></pre></td></tr></table></figure><h2 id="自定义配置文件"><a href="#自定义配置文件" class="headerlink" title="自定义配置文件"></a>自定义配置文件</h2><p>有时候我们不希望把所有配置都放在application.properties里面，这时候我们可以另外定义一个，<br>这里我明取名为test.properties,路径跟也放在src/main/resources下面。</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">app</span>.name=测试</span><br><span class="line"><span class="keyword">app</span>.<span class="keyword">version</span>=1.2.1</span><br><span class="line"><span class="keyword">app</span>.description=<span class="keyword">App</span>的名字为<span class="variable">$&#123;app</span>.name&#125;,当前版本<span class="variable">$&#123;app</span>.<span class="keyword">version</span>&#125;</span><br></pre></td></tr></table></figure><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> me.chilam.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.PropertySource;</span><br><span class="line"><span class="comment">//必须要加这个注解，表示自定义配置</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = <span class="meta-string">"app"</span>)</span></span><br><span class="line"><span class="comment">//指定自定义配置文件位置</span></span><br><span class="line"><span class="meta">@PropertySource(<span class="meta-string">"classpath:test.properties"</span>)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String version;</span><br><span class="line">    <span class="keyword">private</span> String description;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//getter setter</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意事项：application.properties和test.properties存在相同key的话，将来值只会是前者里面配置的!!!</strong></p><h2 id="随机值配置"><a href="#随机值配置" class="headerlink" title="随机值配置"></a>随机值配置</h2><p>配置文件中${random} 可以用来生成各种不同类型的随机值，从而简化了代码生成的麻烦，<br>例如 生成 int 值、long 值或者 string 字符串。</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">app</span>.secret=<span class="variable">$&#123;random</span>.value&#125;</span><br><span class="line"><span class="keyword">app</span>.number=<span class="variable">$&#123;random</span>.int&#125;</span><br><span class="line"><span class="keyword">app</span>.bignumber=<span class="variable">$&#123;random</span>.long&#125;</span><br><span class="line"><span class="keyword">app</span>.uuid=<span class="variable">$&#123;random</span>.uuid&#125;</span><br><span class="line"><span class="keyword">app</span>.number.less.than.ten=<span class="variable">$&#123;random</span>.int(10)&#125;</span><br><span class="line"><span class="keyword">app</span>.number.<span class="keyword">in</span>.<span class="keyword">range</span>=<span class="variable">$&#123;random</span>.int[1024,65536]&#125;</span><br></pre></td></tr></table></figure><h3 id="更改内置tomcat容器端口"><a href="#更改内置tomcat容器端口" class="headerlink" title="更改内置tomcat容器端口"></a>更改内置tomcat容器端口</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">server.<span class="attribute">port</span>=9000</span><br></pre></td></tr></table></figure><h3 id="Spring-Boot属性源"><a href="#Spring-Boot属性源" class="headerlink" title="Spring Boot属性源"></a>Spring Boot属性源</h3><p>实际上，Spring Boot应用程序有多种设置途径，Spring Boot能从多重属性源获得属性，包括如下几种：</p><ul><li>根目录下的开发工具全局设置属性(当开发工具激活时为~/.spring-boot-devtools.properties)。</li><li>测试中的@TestPropertySource注解。</li><li>测试中的@SpringBootTest#properties注解特性。</li><li>命令行参数</li><li>SPRING_APPLICATION_JSON中的属性(环境变量或系统属性中的内联JSON嵌入)。</li><li>ServletConfig初始化参数。</li><li>ServletContext初始化参数。</li><li>java:comp/env里的JNDI属性</li><li>JVM系统属性</li><li>操作系统环境变量</li><li>随机生成的带random.* 前缀的属性（在设置其他属性时，可以应用他们，比如${random.long}）</li><li><em>应用程序以外的application.properties或者appliaction.yml文件</em></li><li><em>打包在应用程序内的application.properties或者appliaction.yml文件</em></li><li><em>通过@PropertySource标注的属性源</em></li><li>默认属性(通过SpringApplication.setDefaultProperties指定).</li></ul><p>这里列表按组优先级排序，也就是说，任何在高优先级属性源里设置的属性都会覆盖低优先级的相同属性，<br>列如我们上面提到的命令行属性就覆盖了application.properties的属性。</p><h3 id="配置文件优先级"><a href="#配置文件优先级" class="headerlink" title="配置文件优先级"></a>配置文件优先级</h3><p>application.properties和application.yml文件可以放在以下四个位置：</p><ul><li>外置，在相对于应用程序运行目录的/congfig子目录里。</li><li>外置，在应用程序运行的目录里</li><li>内置，在config包内</li><li>内置，在Classpath根目录</li></ul><h3 id="多环境配置文件"><a href="#多环境配置文件" class="headerlink" title="多环境配置文件"></a>多环境配置文件</h3><p>当应用程序需要部署到不同运行环境时，一些配置细节通常会有所不同，最简单的比如日志，生产日志会将日志级别设置为WARN或更高级别，<br>并将日志写入日志文件，而开发的时候需要日志级别为DEBUG，日志输出到控制台即可。<br>如果按照以前的做法，就是每次发布的时候替换掉配置文件，这样太麻烦了，Spring Boot的Profile就给我们提供了解决方案，命令带上参数就搞定。</p><p>这里我们来模拟一下，只是简单的修改端口来测试<br>在Spring Boot中多环境配置文件名需要满足application-{profile}.properties的格式，其中{profile}对应你的环境标识，比如：</p><ul><li>application-dev.properties：开发环境</li><li>application-test.properties：生产环境</li></ul><p>我给不同的环境添加不同的端口属性server.port，然后根据指定不同的spring.profiles.active来切换使用。</p><h3 id="Spring-Boot常用属性"><a href="#Spring-Boot常用属性" class="headerlink" title="Spring Boot常用属性"></a>Spring Boot常用属性</h3><p><a href="https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html" target="_blank" rel="noopener">官方文档</a></p><p>建议大概过一篇，后续的文档也会使用到很多的属性</p>]]></content>
    
    <summary type="html">
    
      application.properties简介以及常用属性
    
    </summary>
    
      <category term="搬砖" scheme="http://chilam.me/categories/%E6%90%AC%E7%A0%96/"/>
    
    
      <category term="spring-boot" scheme="http://chilam.me/tags/spring-boot/"/>
    
  </entry>
  
  <entry>
    <title>1.sb-简介</title>
    <link href="http://chilam.me/2017/12/17/spring-boot-1/"/>
    <id>http://chilam.me/2017/12/17/spring-boot-1/</id>
    <published>2017-12-17T01:00:01.000Z</published>
    <updated>2018-06-30T10:05:00.264Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><ul><li>熟悉MAVEN</li><li>熟悉IDEA</li><li>熟悉Spring的xml配置方式以及基本原理</li></ul><p>Spring boot,Spring Cloud终于决定入坑了，在这里会记录一下入坑的过程。</p><p>Spring Boot不是一门新技术，所以不用紧张。从本质上来说，Spring Boot就是Spring,它做了那些没有它你也会去做的<br>Spring Bean配置。它使用“习惯优于配置”（项目中存在大量的配置，此外还内置了一个习惯性的配置，让你无需手动进行配置）<br>的理念让你的项目快速运行起来。使用Spring Boot很容易创建一个独立运行（运行jar,内嵌Servlet容器）、<br>准生产级别的基于Spring框架的项目，使用Spring Boot你可以不用或者只需要很少的Spring配置。所以总结来说，相对于spring,spring<br>boot的优点可以总结如下：</p><ul><li>为所有Spring开发者更快的入门</li><li>开箱即用，提供各种默认配置来简化项目配置</li><li>内嵌式容器简化Web项目</li><li>没有冗余代码生成和XML配置的要求</li></ul><h2 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h2><h3 id="传统SpringMVC的WEB工程"><a href="#传统SpringMVC的WEB工程" class="headerlink" title="传统SpringMVC的WEB工程"></a>传统SpringMVC的WEB工程</h3><p>让我们先看看传统Spring MVC开发一个简单的Hello World Web应用程序，你应该做什么，我能想到一些基本的需求</p><ul><li>一个项目结构，其中有一个包含必要依赖的Maven构建文件，最起码要有Spring MVC和Servlet API等依赖。</li><li>一个web.xml文件（或者一个WebApplicationInitializer实现），其中配置Spring的DispatcherServlet。</li><li>一个启动了Spring MVC的Spring配置(视图解析器，JSON处理，静态资源一大堆配置)</li><li>一控制器类，以“hello World”相应HTTP请求。</li><li>一个用于部署应用程序的Web应用服务器，比如Tomcat。</li></ul><p>最让人难以接受的是，上述过程只有一个东西是和Hello World功能相关的，即控制器，剩下的都是Spring开发的Web应用程序必需的配置<br>步骤。上述搭建过程对于一个熟手来说至少都要20分钟，而且是在不出错的情况下。</p><h3 id="搭建Spring-Boot项目"><a href="#搭建Spring-Boot项目" class="headerlink" title="搭建Spring Boot项目"></a>搭建Spring Boot项目</h3><p>搭建方式很多，如下几种：</p><ul><li>访问<a href="http://start.spring.io/" target="_blank" rel="noopener">http://start.spring.io/</a>生成工程文件</li><li>IDEA的Spring Initilzer插件创建(推荐使用)</li><li><a href="https://docs.spring.io/spring-boot/docs/current-SNAPSHOT/reference/htmlsingle/#getting-started-installation-instructions-for-java" target="_blank" rel="noopener">官网文档QuickStart</a></li></ul><p>下面就介绍官网文档的搭建方式，了解的比较多一点。</p><ul><li>创建一个简单maven工程，pom.xml如下配置：</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>me.chilam<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>boot-demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>添加spring boot的依赖</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--继承Spring Boot --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>me.chilam<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>boot-demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Spring Boot Web工程依赖 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>编写控制器和启动类</li></ul><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> me.chilam.example;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Example</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(<span class="meta-string">"/"</span>)</span></span><br><span class="line">    String home()&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Hello Project"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//启动方法</span></span><br><span class="line">    <span class="keyword">public</span> static void main(String[] args) &#123;</span><br><span class="line">        SpringApplication.run(Example.<span class="keyword">class</span>,args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>运行</li></ul><p>运行main方法会出现如下日志：</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2017</span>-<span class="number">12</span>-<span class="number">15</span> <span class="number">10</span>:<span class="number">31</span>:<span class="number">55.306</span>  INFO <span class="number">5856</span> --- [  restartedMain] o.s.boot.SpringApplication               : </span><br><span class="line">  .   ____          <span class="symbol">_</span>            <span class="symbol">__</span> <span class="symbol">_</span> <span class="symbol">_</span></span><br><span class="line"> /\\ / ___'<span class="symbol">_</span> <span class="symbol">__</span> <span class="symbol">_</span> <span class="symbol">_</span>(<span class="symbol">_</span>)<span class="symbol">_</span> <span class="symbol">__</span>  <span class="symbol">__</span> <span class="symbol">_</span> \ \ \ \</span><br><span class="line">( ( )\___ | '<span class="symbol">_</span> | '<span class="symbol">_</span>| | '<span class="symbol">_</span> \/ <span class="symbol">_</span>` | \ \ \ \</span><br><span class="line"> \\/  ___)| |<span class="symbol">_</span>)| | | | | || (<span class="symbol">_</span>| |  ) ) ) )</span><br><span class="line">  '  |____| .<span class="symbol">__</span>|<span class="symbol">_</span>| |<span class="symbol">_</span>|<span class="symbol">_</span>| |<span class="symbol">_</span>\<span class="symbol">__</span>, | / / / /</span><br><span class="line"> =========|<span class="symbol">_</span>|==============|___/=/<span class="symbol">_</span>/<span class="symbol">_</span>/<span class="symbol">_</span>/</span><br><span class="line"> :: Spring Boot ::        (v1.3.2.RELEASE)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">2017</span>-<span class="number">12</span>-<span class="number">15</span> <span class="number">10</span>:<span class="number">31</span>:<span class="number">55.379</span>  INFO <span class="number">5856</span> --- [  restartedMain] me.chilam.<span class="built_in">example</span>.Example                : Starting Example on USER-20170427SG with PID <span class="number">5856</span> (E:\codes\java\spring-boot-<span class="built_in">demo</span>\target\classes started by Administrator <span class="keyword">in</span> E:\codes\java\spring-boot-<span class="built_in">demo</span>)</span><br><span class="line"><span class="number">2017</span>-<span class="number">12</span>-<span class="number">15</span> <span class="number">10</span>:<span class="number">31</span>:<span class="number">55.380</span>  INFO <span class="number">5856</span> --- [  restartedMain] me.chilam.<span class="built_in">example</span></span><br><span class="line">......</span><br></pre></td></tr></table></figure><p>在浏览器访问<a href="http://localhost:8080/" target="_blank" rel="noopener">http://localhost:8080/</a>，浏览器会出现Hello Project。</p><p>上述过程其实就完成了一个简单搭建过程，根本没有配置过任何的spring相关的配置，对于开发人员来说是很简单方便的。</p><h3 id="Spring-Boot的父级依赖"><a href="#Spring-Boot的父级依赖" class="headerlink" title="Spring Boot的父级依赖"></a>Spring Boot的父级依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这块配置就是Spring Boot父级依赖，spring-boot-starter-parent是一个特殊的starter,它用来提供相关的Maven默认依赖，<br>使用它之后，常用的包依赖可以省去version标签。关于Spring Boot提供了哪些jar包的依赖，可以看一下它的pom.xml如下：</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span><span class="meta">?&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> </span></span></span><br><span class="line"><span class="xml">    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" </span></span><br><span class="line"><span class="xml">    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">relativePath</span>&gt;</span>../../spring-boot-dependencies<span class="tag">&lt;/<span class="name">relativePath</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">name</span>&gt;</span>Spring Boot Starter Parent<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">description</span>&gt;</span>Parent pom providing dependency and plugin management for applications</span></span><br><span class="line"><span class="xml">built with Maven<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">url</span>&gt;</span>http://projects.spring.io/spring-boot/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">organization</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">name</span>&gt;</span>Pivotal Software, Inc.<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.spring.io<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">organization</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.6<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">resource.delimiter</span>&gt;</span>@<span class="tag">&lt;/<span class="name">resource.delimiter</span>&gt;</span> <span class="comment">&lt;!-- delimiter that doesn't clash with Spring $</span></span><span class="template-variable">&#123;&#125;</span><span class="xml"><span class="comment"> placeholders --&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>$</span><span class="template-variable">&#123;java.version&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>$</span><span class="template-variable">&#123;java.version&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$</span><span class="template-variable">&#123;spring.version&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span></span><br><span class="line"><span class="xml">...</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>上述配置中除了一个spring-core的依赖你会发现它还有一个parent</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">relativePath</span>&gt;</span>../../spring-boot-dependencies<span class="tag">&lt;/<span class="name">relativePath</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在来看哈这个parent的pom.xml的配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag"> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> </span></span><br><span class="line"><span class="tag"> <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>Spring Boot Dependencies<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>Spring Boot Dependencies<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url</span>&gt;</span>http://projects.spring.io/spring-boot/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">organization</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>Pivotal Software, Inc.<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.spring.io<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">organization</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">licenses</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">license</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>Apache License, Version 2.0<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.apache.org/licenses/LICENSE-2.0<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">license</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">licenses</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scm</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url</span>&gt;</span>https://github.com/spring-projects/spring-boot<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">scm</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">developers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">developer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span>pwebb<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>Phillip Webb<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">email</span>&gt;</span>pwebb at pivotal.io<span class="tag">&lt;/<span class="name">email</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">organization</span>&gt;</span>Pivotal Software, Inc.<span class="tag">&lt;/<span class="name">organization</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">organizationUrl</span>&gt;</span>http://www.spring.io<span class="tag">&lt;/<span class="name">organizationUrl</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">roles</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">role</span>&gt;</span>Project lead<span class="tag">&lt;/<span class="name">role</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">roles</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">developer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">developer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span>dsyer<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>Dave Syer<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">email</span>&gt;</span>dsyer at pivotal.io<span class="tag">&lt;/<span class="name">email</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">organization</span>&gt;</span>Pivotal Software, Inc.<span class="tag">&lt;/<span class="name">organization</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">organizationUrl</span>&gt;</span>http://www.spring.io<span class="tag">&lt;/<span class="name">organizationUrl</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">roles</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">role</span>&gt;</span>Project lead<span class="tag">&lt;/<span class="name">role</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">roles</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">developer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">developers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Dependency versions --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">activemq.version</span>&gt;</span>5.14.5<span class="tag">&lt;/<span class="name">activemq.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">antlr2.version</span>&gt;</span>2.7.7<span class="tag">&lt;/<span class="name">antlr2.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">appengine-sdk.version</span>&gt;</span>1.9.59<span class="tag">&lt;/<span class="name">appengine-sdk.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artemis.version</span>&gt;</span>1.5.5<span class="tag">&lt;/<span class="name">artemis.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aspectj.version</span>&gt;</span>1.8.13<span class="tag">&lt;/<span class="name">aspectj.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">assertj.version</span>&gt;</span>2.6.0<span class="tag">&lt;/<span class="name">assertj.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">atomikos.version</span>&gt;</span>3.9.3<span class="tag">&lt;/<span class="name">atomikos.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bitronix.version</span>&gt;</span>2.1.4<span class="tag">&lt;/<span class="name">bitronix.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">caffeine.version</span>&gt;</span>2.3.5<span class="tag">&lt;/<span class="name">caffeine.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">cassandra-driver.version</span>&gt;</span>3.1.4<span class="tag">&lt;/<span class="name">cassandra-driver.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">classmate.version</span>&gt;</span>1.3.4<span class="tag">&lt;/<span class="name">classmate.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">commons-beanutils.version</span>&gt;</span>1.9.3<span class="tag">&lt;/<span class="name">commons-beanutils.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">commons-collections.version</span>&gt;</span>3.2.2<span class="tag">&lt;/<span class="name">commons-collections.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">commons-codec.version</span>&gt;</span>1.10<span class="tag">&lt;/<span class="name">commons-codec.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">commons-dbcp.version</span>&gt;</span>1.4<span class="tag">&lt;/<span class="name">commons-dbcp.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">commons-dbcp2.version</span>&gt;</span>2.1.1<span class="tag">&lt;/<span class="name">commons-dbcp2.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">commons-digester.version</span>&gt;</span>2.1<span class="tag">&lt;/<span class="name">commons-digester.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">commons-pool.version</span>&gt;</span>1.6<span class="tag">&lt;/<span class="name">commons-pool.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">commons-pool2.version</span>&gt;</span>2.4.3<span class="tag">&lt;/<span class="name">commons-pool2.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">couchbase-client.version</span>&gt;</span>2.3.7<span class="tag">&lt;/<span class="name">couchbase-client.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">couchbase-cache-client.version</span>&gt;</span>2.1.0<span class="tag">&lt;/<span class="name">couchbase-cache-client.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">crashub.version</span>&gt;</span>1.3.2<span class="tag">&lt;/<span class="name">crashub.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">derby.version</span>&gt;</span>10.13.1.1<span class="tag">&lt;/<span class="name">derby.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dom4j.version</span>&gt;</span>1.6.1<span class="tag">&lt;/<span class="name">dom4j.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dropwizard-metrics.version</span>&gt;</span>3.1.5<span class="tag">&lt;/<span class="name">dropwizard-metrics.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ehcache.version</span>&gt;</span>2.10.4<span class="tag">&lt;/<span class="name">ehcache.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ehcache3.version</span>&gt;</span>3.2.3<span class="tag">&lt;/<span class="name">ehcache3.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">embedded-mongo.version</span>&gt;</span>1.50.5<span class="tag">&lt;/<span class="name">embedded-mongo.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">flyway.version</span>&gt;</span>3.2.1<span class="tag">&lt;/<span class="name">flyway.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">freemarker.version</span>&gt;</span>2.3.27-incubating<span class="tag">&lt;/<span class="name">freemarker.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">elasticsearch.version</span>&gt;</span>2.4.6<span class="tag">&lt;/<span class="name">elasticsearch.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">gemfire.version</span>&gt;</span>8.2.7<span class="tag">&lt;/<span class="name">gemfire.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">glassfish-el.version</span>&gt;</span>3.0.0<span class="tag">&lt;/<span class="name">glassfish-el.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">gradle.version</span>&gt;</span>2.9<span class="tag">&lt;/<span class="name">gradle.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groovy.version</span>&gt;</span>2.4.13<span class="tag">&lt;/<span class="name">groovy.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">gson.version</span>&gt;</span>2.8.2<span class="tag">&lt;/<span class="name">gson.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2.version</span>&gt;</span>1.4.196<span class="tag">&lt;/<span class="name">h2.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hamcrest.version</span>&gt;</span>1.3<span class="tag">&lt;/<span class="name">hamcrest.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hazelcast.version</span>&gt;</span>3.7.8<span class="tag">&lt;/<span class="name">hazelcast.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hazelcast-hibernate4.version</span>&gt;</span>3.7.1<span class="tag">&lt;/<span class="name">hazelcast-hibernate4.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hazelcast-hibernate5.version</span>&gt;</span>1.1.3<span class="tag">&lt;/<span class="name">hazelcast-hibernate5.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hibernate.version</span>&gt;</span>5.0.12.Final<span class="tag">&lt;/<span class="name">hibernate.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hibernate-validator.version</span>&gt;</span>5.3.6.Final<span class="tag">&lt;/<span class="name">hibernate-validator.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hikaricp.version</span>&gt;</span>2.5.1<span class="tag">&lt;/<span class="name">hikaricp.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hikaricp-java6.version</span>&gt;</span>2.3.13<span class="tag">&lt;/<span class="name">hikaricp-java6.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hikaricp-java7.version</span>&gt;</span>2.4.13<span class="tag">&lt;/<span class="name">hikaricp-java7.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hsqldb.version</span>&gt;</span>2.3.5<span class="tag">&lt;/<span class="name">hsqldb.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">htmlunit.version</span>&gt;</span>2.21<span class="tag">&lt;/<span class="name">htmlunit.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">httpasyncclient.version</span>&gt;</span>4.1.3<span class="tag">&lt;/<span class="name">httpasyncclient.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">httpclient.version</span>&gt;</span>4.5.3<span class="tag">&lt;/<span class="name">httpclient.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">httpcore.version</span>&gt;</span>4.4.8<span class="tag">&lt;/<span class="name">httpcore.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">infinispan.version</span>&gt;</span>8.2.8.Final<span class="tag">&lt;/<span class="name">infinispan.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jackson.version</span>&gt;</span>2.8.10<span class="tag">&lt;/<span class="name">jackson.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">janino.version</span>&gt;</span>2.7.8<span class="tag">&lt;/<span class="name">janino.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">javassist.version</span>&gt;</span>3.21.0-GA<span class="tag">&lt;/<span class="name">javassist.version</span>&gt;</span> <span class="comment">&lt;!-- Same as Hibernate --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">javax-cache.version</span>&gt;</span>1.0.0<span class="tag">&lt;/<span class="name">javax-cache.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">javax-mail.version</span>&gt;</span>1.5.6<span class="tag">&lt;/<span class="name">javax-mail.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">javax-transaction.version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">javax-transaction.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">javax-validation.version</span>&gt;</span>1.1.0.Final<span class="tag">&lt;/<span class="name">javax-validation.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jaxen.version</span>&gt;</span>1.1.6<span class="tag">&lt;/<span class="name">jaxen.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jaybird.version</span>&gt;</span>2.2.13<span class="tag">&lt;/<span class="name">jaybird.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jboss-logging.version</span>&gt;</span>3.3.1.Final<span class="tag">&lt;/<span class="name">jboss-logging.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jboss-transaction-spi.version</span>&gt;</span>7.6.0.Final<span class="tag">&lt;/<span class="name">jboss-transaction-spi.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jdom2.version</span>&gt;</span>2.0.6<span class="tag">&lt;/<span class="name">jdom2.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jedis.version</span>&gt;</span>2.9.0<span class="tag">&lt;/<span class="name">jedis.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jersey.version</span>&gt;</span>2.25.1<span class="tag">&lt;/<span class="name">jersey.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jest.version</span>&gt;</span>2.0.4<span class="tag">&lt;/<span class="name">jest.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jetty.version</span>&gt;</span>9.4.7.v20170914<span class="tag">&lt;/<span class="name">jetty.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jetty-jsp.version</span>&gt;</span>2.2.0.v201112011158<span class="tag">&lt;/<span class="name">jetty-jsp.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jetty-el.version</span>&gt;</span>8.0.33<span class="tag">&lt;/<span class="name">jetty-el.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jms-api.version</span>&gt;</span>1.1-rev-1<span class="tag">&lt;/<span class="name">jms-api.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jmustache.version</span>&gt;</span>1.13<span class="tag">&lt;/<span class="name">jmustache.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jna.version</span>&gt;</span>4.2.2<span class="tag">&lt;/<span class="name">jna.version</span>&gt;</span></span><br><span class="line">....</span><br></pre></td></tr></table></figure><p>文件有2000多行…里面配置的就是实实在在的依赖….</p><h3 id="不继承Spring-Boot的Parent"><a href="#不继承Spring-Boot的Parent" class="headerlink" title="不继承Spring Boot的Parent"></a>不继承Spring Boot的Parent</h3><p>对于我们自己的Maven项目很多时候，要使用的自己的公司标准parent<br>如果你不想使用spring-boot-starter-parent，您仍然可以通过使用scope = import依赖关系来保持依赖关系管理： </p><ul><li>首先在自己公司的parent模块的pom.xml加入依赖</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Import dependency management from Spring Boot --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>然后在你子模块就继承你自己公司标准的parent,并配置如下依赖引入spring boot</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="spring-boot初始项目依赖"><a href="#spring-boot初始项目依赖" class="headerlink" title="spring boot初始项目依赖"></a>spring boot初始项目依赖</h3><p>接下来我们看哈一个spring boot初始项目，到底引入了那些依赖，通过mvn dependency:list查看</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[INFO]</span> <span class="selector-tag">The</span> <span class="selector-tag">following</span> <span class="selector-tag">files</span> <span class="selector-tag">have</span> <span class="selector-tag">been</span> <span class="selector-tag">resolved</span>:</span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.boot</span><span class="selector-pseudo">:spring-boot-starter-logging</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:1.5.9.RELEASE</span><span class="selector-pseudo">:compile</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">com</span><span class="selector-class">.fasterxml</span><span class="selector-class">.jackson</span><span class="selector-class">.core</span><span class="selector-pseudo">:jackson-annotations</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:2.8.0</span><span class="selector-pseudo">:compile</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">com</span><span class="selector-class">.fasterxml</span><span class="selector-class">.jackson</span><span class="selector-class">.core</span><span class="selector-pseudo">:jackson-core</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:2.8.10</span><span class="selector-pseudo">:compile</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">org</span><span class="selector-class">.ow2</span><span class="selector-class">.asm</span><span class="selector-pseudo">:asm</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:5.0.3</span><span class="selector-pseudo">:test</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">org</span><span class="selector-class">.apache</span><span class="selector-class">.tomcat</span><span class="selector-class">.embed</span><span class="selector-pseudo">:tomcat-embed-el</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:8.5.23</span><span class="selector-pseudo">:compile</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">org</span><span class="selector-class">.jboss</span><span class="selector-class">.logging</span><span class="selector-pseudo">:jboss-logging</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:3.3.1.Final</span><span class="selector-pseudo">:compile</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">org</span><span class="selector-class">.slf4j</span><span class="selector-pseudo">:log4j-over-slf4j</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:1.7.25</span><span class="selector-pseudo">:compile</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">org</span><span class="selector-class">.hibernate</span><span class="selector-pseudo">:hibernate-validator</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:5.3.6.Final</span><span class="selector-pseudo">:compile</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">org</span><span class="selector-class">.hamcrest</span><span class="selector-pseudo">:hamcrest-library</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:1.3</span><span class="selector-pseudo">:test</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-pseudo">:spring-context</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:4.3.13.RELEASE</span><span class="selector-pseudo">:compile</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-pseudo">:spring-core</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:4.3.13.RELEASE</span><span class="selector-pseudo">:compile</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">ch</span><span class="selector-class">.qos</span><span class="selector-class">.logback</span><span class="selector-pseudo">:logback-core</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:1.1.11</span><span class="selector-pseudo">:compile</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">org</span><span class="selector-class">.mockito</span><span class="selector-pseudo">:mockito-core</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:1.10.19</span><span class="selector-pseudo">:test</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-pseudo">:spring-test</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:4.3.13.RELEASE</span><span class="selector-pseudo">:test</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.boot</span><span class="selector-pseudo">:spring-boot-autoconfigure</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:1.5.9.RELEASE</span><span class="selector-pseudo">:compile</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-pseudo">:spring-web</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:4.3.13.RELEASE</span><span class="selector-pseudo">:compile</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-pseudo">:spring-beans</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:4.3.13.RELEASE</span><span class="selector-pseudo">:compile</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.boot</span><span class="selector-pseudo">:spring-boot-test</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:1.5.9.RELEASE</span><span class="selector-pseudo">:test</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">org</span><span class="selector-class">.assertj</span><span class="selector-pseudo">:assertj-core</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:2.6.0</span><span class="selector-pseudo">:test</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.boot</span><span class="selector-pseudo">:spring-boot-starter-web</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:1.5.9.RELEASE</span><span class="selector-pseudo">:compile</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">org</span><span class="selector-class">.skyscreamer</span><span class="selector-pseudo">:jsonassert</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:1.4.0</span><span class="selector-pseudo">:test</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">org</span><span class="selector-class">.yaml</span><span class="selector-pseudo">:snakeyaml</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:1.17</span><span class="selector-pseudo">:runtime</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">com</span><span class="selector-class">.fasterxml</span><span class="selector-pseudo">:classmate</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:1.3.4</span><span class="selector-pseudo">:compile</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">org</span><span class="selector-class">.objenesis</span><span class="selector-pseudo">:objenesis</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:2.1</span><span class="selector-pseudo">:test</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">org</span><span class="selector-class">.slf4j</span><span class="selector-pseudo">:jcl-over-slf4j</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:1.7.25</span><span class="selector-pseudo">:compile</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-pseudo">:spring-expression</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:4.3.13.RELEASE</span><span class="selector-pseudo">:compile</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.boot</span><span class="selector-pseudo">:spring-boot-starter-test</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:1.5.9.RELEASE</span><span class="selector-pseudo">:test</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.boot</span><span class="selector-pseudo">:spring-boot-starter-tomcat</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:1.5.9.RELEASE</span><span class="selector-pseudo">:compile</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">org</span><span class="selector-class">.hamcrest</span><span class="selector-pseudo">:hamcrest-core</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:1.3</span><span class="selector-pseudo">:test</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">com</span><span class="selector-class">.jayway</span><span class="selector-class">.jsonpath</span><span class="selector-pseudo">:json-path</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:2.2.0</span><span class="selector-pseudo">:test</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.boot</span><span class="selector-pseudo">:spring-boot-devtools</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:1.5.9.RELEASE</span><span class="selector-pseudo">:compile</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">org</span><span class="selector-class">.apache</span><span class="selector-class">.tomcat</span><span class="selector-class">.embed</span><span class="selector-pseudo">:tomcat-embed-websocket</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:8.5.23</span><span class="selector-pseudo">:compile</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">junit</span><span class="selector-pseudo">:junit</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:4.12</span><span class="selector-pseudo">:test</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-pseudo">:spring-webmvc</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:4.3.13.RELEASE</span><span class="selector-pseudo">:compile</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">org</span><span class="selector-class">.slf4j</span><span class="selector-pseudo">:slf4j-api</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:1.7.25</span><span class="selector-pseudo">:compile</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.boot</span><span class="selector-pseudo">:spring-boot-starter</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:1.5.9.RELEASE</span><span class="selector-pseudo">:compile</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">net</span><span class="selector-class">.minidev</span><span class="selector-pseudo">:json-smart</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:2.2.1</span><span class="selector-pseudo">:test</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">org</span><span class="selector-class">.apache</span><span class="selector-class">.tomcat</span><span class="selector-pseudo">:tomcat-annotations-api</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:8.5.23</span><span class="selector-pseudo">:compile</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">net</span><span class="selector-class">.minidev</span><span class="selector-pseudo">:accessors-smart</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:1.1</span><span class="selector-pseudo">:test</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.boot</span><span class="selector-pseudo">:spring-boot</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:1.5.9.RELEASE</span><span class="selector-pseudo">:compile</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">javax</span><span class="selector-class">.validation</span><span class="selector-pseudo">:validation-api</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:1.1.0.Final</span><span class="selector-pseudo">:compile</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-pseudo">:spring-aop</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:4.3.13.RELEASE</span><span class="selector-pseudo">:compile</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">com</span><span class="selector-class">.vaadin</span><span class="selector-class">.external</span><span class="selector-class">.google</span><span class="selector-pseudo">:android-json</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:0.0.20131108.vaadin1</span><span class="selector-pseudo">:test</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">org</span><span class="selector-class">.apache</span><span class="selector-class">.tomcat</span><span class="selector-class">.embed</span><span class="selector-pseudo">:tomcat-embed-core</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:8.5.23</span><span class="selector-pseudo">:compile</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">ch</span><span class="selector-class">.qos</span><span class="selector-class">.logback</span><span class="selector-pseudo">:logback-classic</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:1.1.11</span><span class="selector-pseudo">:compile</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.boot</span><span class="selector-pseudo">:spring-boot-test-autoconfigure</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:1.5.9.RELEASE</span><span class="selector-pseudo">:test</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">org</span><span class="selector-class">.slf4j</span><span class="selector-pseudo">:jul-to-slf4j</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:1.7.25</span><span class="selector-pseudo">:compile</span></span><br><span class="line"><span class="selector-attr">[INFO]</span>    <span class="selector-tag">com</span><span class="selector-class">.fasterxml</span><span class="selector-class">.jackson</span><span class="selector-class">.core</span><span class="selector-pseudo">:jackson-databind</span><span class="selector-pseudo">:jar</span><span class="selector-pseudo">:2.8.10</span><span class="selector-pseudo">:compile</span></span><br></pre></td></tr></table></figure><p>嘿嘿嘿，看来依赖了好多呢，如果让我自己弄估计要调半天，所以Spring Boot通过提供众多起步依赖降低项目依赖的复杂度。<br>起步依赖本质上是一个Maven项目对象模型（Project Object Model，POM），定义了对其他库的传递依赖，<br>这些东西加在一起即支持某项功能。很多起步依赖的命名都暗示了它们提供的某种或者某类功能。</p><h3 id="Spring-Boot-Maven插件"><a href="#Spring-Boot-Maven插件" class="headerlink" title="Spring Boot Maven插件"></a>Spring Boot Maven插件</h3><p>加入如下配置在你的pom.xml里</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><p>上面的配置就是Spring Boot Maven插件，Spring Boot Maven插件提供了许多方便的功能：</p><ul><li>把项目打包成一个可执行的超级JAR（uber-JAR）,包括把应用程序的所有依赖打入JAR文件内，并为JAR添加一个描述文件，其中的内容能让你用java -jar来运行应用程序。</li><li>搜索public static void main()方法来标记为可运行类。</li></ul><h3 id="启动类"><a href="#启动类" class="headerlink" title="启动类"></a>启动类</h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> me.chilam.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Example</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(<span class="meta-string">"/"</span>)</span></span><br><span class="line">    String home()&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Hello Project"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> static void main(String[] args) &#123;</span><br><span class="line">        SpringApplication.run(Example.<span class="keyword">class</span>,args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Spring Boot 推荐采用基于 Java Config 的配置方式，而不是传统的 XML。例如，<br>@Configuration、@Bean、@EnableAutoConfiguration、@CompomentScan、@PropertySource、@Repository、@Service、@RestController等。</p><ul><li>@SpringBootApplication是Sprnig Boot项目的核心注解，主要目的是开启自动配置。后续讲解原理的时候再深入介绍。</li><li>main方法这是一个标准的Java应用的main的方法，主要作用是作为项目启动的入口。</li><li>@RestController注解等价于@Controller+@ResponseBody的结合，使用这个注解的类里面的方法都以json格式输出。</li></ul><h3 id="启动方式"><a href="#启动方式" class="headerlink" title="启动方式"></a>启动方式</h3><ul><li>直接执行启动类的main方法</li><li>利用spring boot的maven插件执行 mvn spring-boot:run</li><li>打包后 java -jar 去运行</li></ul><h2 id="Spring-Boot常用模块"><a href="#Spring-Boot常用模块" class="headerlink" title="Spring Boot常用模块"></a>Spring Boot常用模块</h2><p>Spring Boot提供了很多”开箱即用“的依赖模块，都是以spring-boot-starter-xx作为命名的。下面列举一些常用的模块。</p><ul><li>spring-boot-starter-logging ：使用 Spring Boot 默认的日志框架 Logback。</li><li>spring-boot-starter-log4j ：添加 Log4j 的支持。</li><li>spring-boot-starter-web ：支持 Web 应用开发，包含 Tomcat 和 spring-mvc。</li><li>spring-boot-starter-tomcat ：使用 Spring Boot 默认的 Tomcat 作为应用服务器。</li><li>spring-boot-starter-jetty ：使用 Jetty 而不是默认的 Tomcat 作为应用服务器。</li><li>spring-boot-starter-test ：包含常用的测试所需的依赖，如 JUnit、Hamcrest、Mockito 和 spring-test 等。</li><li>spring-boot-starter-aop ：包含 spring-aop 和 AspectJ 来支持面向切面编程（AOP）。</li><li>spring-boot-starter-security ：包含 spring-security。</li><li>spring-boot-starter-jdbc ：支持使用 JDBC 访问数据库。</li><li>spring-boot-starter-redis ：支持使用 Redis。</li><li>spring-boot-starter-data-mongodb ：包含 spring-data-mongodb 来支持 MongoDB。</li><li>spring-boot-starter-data-jpa ：包含 spring-data-jpa、spring-orm 和 Hibernate 来支持 JPA。</li><li>spring-boot-starter-amqp ：通过 spring-rabbit 支持 AMQP。</li><li>spring-boot-starter-actuator ： 添加适用于生产环境的功能，如性能指标和监测等功能。</li></ul><h2 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h2><p>虽然上面讲解了那么多，但是实际开发步骤很简单，初始化一个Spring Boot，添加一个控制类，启动就能看到效果了。<br>作为入门Spring Boot的入门介绍，相关的需要理解的概念就只有这几点：</p><ul><li>Spring Boot父级依赖的概念</li><li>集成依赖 spring-boot-starter-xx的概念</li><li>应用入口类的作用</li></ul>]]></content>
    
    <summary type="html">
    
      Spring Boot简介
    
    </summary>
    
      <category term="搬砖" scheme="http://chilam.me/categories/%E6%90%AC%E7%A0%96/"/>
    
    
      <category term="spring-boot" scheme="http://chilam.me/tags/spring-boot/"/>
    
  </entry>
  
  <entry>
    <title>logback</title>
    <link href="http://chilam.me/2017/11/17/logback/"/>
    <id>http://chilam.me/2017/11/17/logback/</id>
    <published>2017-11-17T06:06:28.000Z</published>
    <updated>2018-06-30T10:05:00.248Z</updated>
    
    <content type="html"><![CDATA[<p>实现Logback的java配置</p><h3 id="Configuration-in-logback"><a href="#Configuration-in-logback" class="headerlink" title="Configuration in logback"></a>Configuration in logback</h3><p>Let us begin by discussing the initialization steps that logback follows to try to configure itself:</p><ul><li><p>Logback tries to find a file called logback-test.xml in the classpath.</p></li><li><p>If no such file is found, logback tries to find a file called logback.groovy in the classpath.</p></li><li><p>If no such file is found, it checks for the file logback.xml in the classpath..</p></li><li><p>If no such file is found, service-provider loading facility (introduced in JDK 1.6) is used to resolve the<br>implementation of com.qos.logback.classic.spi.Configurator interface by looking up the file<br>META-INF\services\ch.qos.logback.classic.spi.Configurator in the class path.<br>Its contents should specify the fully qualified class name of the desired Configurator implementation.</p></li><li><p>If none of the above succeeds, logback configures itself automatically using the BasicConfigurator which will cause<br>logging output to be directed to the console.</p></li></ul><p><a href="https://logback.qos.ch/manual/configuration.html" target="_blank" rel="noopener">https://logback.qos.ch/manual/configuration.html</a></p><p>以上的来自官网对logback的寻找配置文件的顺序，其中有SPI的机制META-INF\services\ch.qos.logback.classic.spi.Configurator</p><p>以下就是实现接口类</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ch.qos.logback.classic.AsyncAppender;</span><br><span class="line"><span class="keyword">import</span> ch.qos.logback.classic.Level;</span><br><span class="line"><span class="keyword">import</span> ch.qos.logback.classic.Logger;</span><br><span class="line"><span class="keyword">import</span> ch.qos.logback.classic.LoggerContext;</span><br><span class="line"><span class="keyword">import</span> ch.qos.logback.classic.layout.TTLLLayout;</span><br><span class="line"><span class="keyword">import</span> ch.qos.logback.classic.spi.Configurator;</span><br><span class="line"><span class="keyword">import</span> ch.qos.logback.classic.spi.ILoggingEvent;</span><br><span class="line"><span class="keyword">import</span> ch.qos.logback.core.ConsoleAppender;</span><br><span class="line"><span class="keyword">import</span> ch.qos.logback.core.encoder.LayoutWrappingEncoder;</span><br><span class="line"><span class="keyword">import</span> ch.qos.logback.core.spi.ContextAwareBase;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ConcurrentHashMap;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * maxp 2017年11月21日09:08:432</span></span><br><span class="line"><span class="comment"> * java配置日志代替logback.xml</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TaLogBackConfig</span> <span class="keyword"><span class="keyword">extends</span> <span class="type">ContextAwareBase</span></span> <span class="keyword"><span class="keyword">implements</span> <span class="type">Configurator</span></span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 所有的logger，方便在线修改logger的level</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> final ConcurrentHashMap&lt;<span class="keyword">String</span>,Logger&gt; loggerMaps = <span class="keyword">new</span> <span class="type">ConcurrentHashMap</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> final <span class="keyword">String</span> APPENDER_CONSOLE=<span class="string">"console"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> final <span class="keyword">String</span> APPENDER_KAFKA=<span class="string">"kafka"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> final <span class="keyword">String</span> APPENDER_ASYNC_KAFKA=<span class="string">"asyncKafka"</span>;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> void configure(LoggerContext loggerContext) &#123;</span><br><span class="line">        <span class="comment">//读取log.properties文件</span></span><br><span class="line">        Map&lt;<span class="keyword">String</span>,<span class="keyword">String</span>&gt; logPropsMap =  loadLogProps();</span><br><span class="line">        Map&lt;<span class="keyword">String</span>,<span class="keyword">String</span>&gt; loggerPropsMaps= loadLoggerProps(logPropsMap);</span><br><span class="line">        <span class="comment">//实例化consoleAppender</span></span><br><span class="line">        ConsoleAppender&lt;ILoggingEvent&gt; ca = <span class="keyword">new</span> <span class="type">ConsoleAppender</span>&lt;ILoggingEvent&gt;();</span><br><span class="line">        ca.setContext(loggerContext);</span><br><span class="line">        ca.setName(<span class="string">"STDOUT"</span>);</span><br><span class="line">        LayoutWrappingEncoder&lt;ILoggingEvent&gt; encoder = <span class="keyword">new</span> <span class="type">LayoutWrappingEncoder</span>&lt;ILoggingEvent&gt;();</span><br><span class="line">        encoder.setContext(loggerContext);</span><br><span class="line">        <span class="comment">// layout.setPattern("%d&#123;HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;36&#125; - %msg%n");</span></span><br><span class="line">        <span class="comment">//实例化日志输出格式</span></span><br><span class="line">        TTLLLayout layout = <span class="keyword">new</span> <span class="type">TTLLLayout</span>();</span><br><span class="line">        layout.setContext(loggerContext);</span><br><span class="line">        layout.start();</span><br><span class="line">        encoder.setLayout(layout);</span><br><span class="line">        ca.setEncoder(encoder);</span><br><span class="line">        ca.start();<span class="comment">//开启</span></span><br><span class="line">        <span class="keyword">String</span> appenders = logPropsMap.<span class="keyword">get</span>(<span class="string">"appender"</span>);</span><br><span class="line">        <span class="keyword">if</span>(appenders.contains(APPENDER_KAFKA))&#123;</span><br><span class="line">            KafkaAppender&lt;ILoggingEvent&gt; kafkaAppender = <span class="keyword">new</span> <span class="type">KafkaAppender</span>&lt;&gt;();</span><br><span class="line">            kafkaAppender.setTopic(logPropsMap.<span class="keyword">get</span>(<span class="string">"kafka.topic"</span>));</span><br><span class="line">            kafkaAppender.setKeyingStrategy(<span class="keyword">new</span> <span class="type">RoundRobinKeyingStrategy</span>());</span><br><span class="line">            kafkaAppender.setDeliveryStrategy(<span class="keyword">new</span> <span class="type">BlockingDeliveryStrategy</span>());</span><br><span class="line">            kafkaAppender.addProducerConfig(logPropsMap.<span class="keyword">get</span>(<span class="string">"kafka.producerConfig"</span>));</span><br><span class="line">            kafkaAppender.addAppender(ca);</span><br><span class="line">            kafkaAppender.start();</span><br><span class="line">            <span class="keyword">if</span>(appenders.contains(APPENDER_ASYNC_KAFKA))&#123;</span><br><span class="line">                AsyncAppender asyncKafkaAppender = <span class="keyword">new</span> <span class="type">AsyncAppender</span>();</span><br><span class="line">                <span class="comment">//不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志</span></span><br><span class="line">                asyncKafkaAppender.setDiscardingThreshold(<span class="number">0</span>);</span><br><span class="line">                <span class="comment">// 更改默认的队列的深度,该值会影响性能.默认值为256</span></span><br><span class="line">                asyncKafkaAppender.setQueueSize(<span class="number">512</span>);</span><br><span class="line">                asyncKafkaAppender.addAppender(ca);</span><br><span class="line">                asyncKafkaAppender.start();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Logger logger = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">for</span>(Map.Entry&lt;<span class="keyword">String</span>,<span class="keyword">String</span>&gt; loggerEntry:<span class="type">loggerPropsMaps</span>.entrySet())&#123;</span><br><span class="line">            logger = loggerContext.getLogger(loggerEntry.getKey());</span><br><span class="line">            logger.setAdditive(<span class="literal">false</span>);</span><br><span class="line">            logger.setLevel(Level.toLevel(loggerEntry.getValue()));<span class="comment">//设置level</span></span><br><span class="line">            logger.addAppender(ca);</span><br><span class="line">            loggerMaps.put(loggerEntry.getKey(),logger);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//根logger</span></span><br><span class="line">        Logger rootLogger = loggerContext.getLogger(Logger.ROOT_LOGGER_NAME);</span><br><span class="line">        rootLogger.addAppender(ca);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 加载所有的logger</span></span><br><span class="line"><span class="comment">     * @param logProps</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span>  Map&lt;<span class="keyword">String</span>,<span class="keyword">String</span>&gt; loadLoggerProps(Map&lt;<span class="keyword">String</span>, <span class="keyword">String</span>&gt; logProps) &#123;</span><br><span class="line">        Map&lt;<span class="keyword">String</span>,<span class="keyword">String</span>&gt; loggerPropsMaps = <span class="keyword">new</span> <span class="type">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span>(!ValidateUtil.isEmpty(logProps))&#123;</span><br><span class="line">            logProps.keySet()</span><br><span class="line">                    .stream()</span><br><span class="line">                    .filter(key -&gt; key.startsWith(<span class="string">"logger"</span>))</span><br><span class="line">                    .forEach(key -&gt;loggerPropsMaps.put(key.substring(<span class="number">7</span>),logProps.<span class="keyword">get</span>(key)));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> loggerPropsMaps;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 加载log.properties</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Map&lt;<span class="keyword">String</span>,<span class="keyword">String</span>&gt; loadLogProps()&#123;</span><br><span class="line">        Map&lt;<span class="keyword">String</span>,<span class="keyword">String</span>&gt; logProps = <span class="keyword">new</span> <span class="type">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            ResourcePropertySource propertySource = <span class="keyword">new</span> <span class="type">ResourcePropertySource</span>(<span class="string">"log.properties"</span>);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">String</span> propKey: <span class="type">propertySource</span>.getPropertyNames()) &#123;</span><br><span class="line">                logProps.put(propKey, (<span class="keyword">String</span>) propertySource.getProperty(propKey));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (IOException ioe)&#123;</span><br><span class="line">            addError(ioe.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> logProps;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;实现Logback的java配置&lt;/p&gt;
&lt;h3 id=&quot;Configuration-in-logback&quot;&gt;&lt;a href=&quot;#Configuration-in-logback&quot; class=&quot;headerlink&quot; title=&quot;Configuration in log
      
    
    </summary>
    
    
      <category term="logback" scheme="http://chilam.me/tags/logback/"/>
    
  </entry>
  
  <entry>
    <title>Hystrix:Latency and Fault Tolerance for Distributed Systems</title>
    <link href="http://chilam.me/2017/11/06/hystrix/"/>
    <id>http://chilam.me/2017/11/06/hystrix/</id>
    <published>2017-11-06T01:37:58.000Z</published>
    <updated>2018-06-30T10:05:00.248Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Command-Pattern"><a href="#Command-Pattern" class="headerlink" title="Command Pattern"></a>Command Pattern</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>在面向对象的程序设计中，一个对象调用另一对象，一般情况下的调用过程就是：创建目标对象实例；设置调用参数；调用目标对象方法。<br>但是有些情况下有必要使用一个专门的类对这种调用过程加以封装，把这种专门的类一般称作Command类。</p><p>任何模式的出现，都是为了解决一些特定场景的耦合问题，以达到对封闭的修改，对扩展的开放的效果，命令模式也不例外：命令模式是为了解决<br>命令的请求者和命令的实现者的耦合关系。</p><h2 id="模式解析"><a href="#模式解析" class="headerlink" title="模式解析"></a>模式解析</h2><ul><li>Command:定义命令的统一接口</li><li>ConcreteCommand:Command接口的实现者，用来执行具体的命令</li><li>Receiver:命令的实际执行者</li><li>Invoker:命令的请求者，是命令模式中最重要的角色，这个角色用来对各个命令进行控制</li></ul><h1 id="观察者模式"><a href="#观察者模式" class="headerlink" title="观察者模式"></a>观察者模式</h1><p>Observer模式的构成：</p><ul><li><p>被观察者：内部状态有可能被改变，而且又需要通知外部的对象</p></li><li><p>观察者：需要对内部状态的改变做出响应的对象</p></li></ul><p>Java的API中已经为我们提供了Observer模式的实现。具体由java.util.Observable类和java.util.Observer接口完成。</p><p>Hystrix is a latency and fault tolerance library designed to isolate points of access to remote systems,services and 3rd<br>party library,stop cascading failure and enable resilience in complex distributed systems where failure is inevitable.</p><ul><li>resilience,n. 恢复力；弹力；顺应力</li><li>inevitable,adj. 必然的，不可避免的</li></ul><h1 id="What-does-it-do"><a href="#What-does-it-do" class="headerlink" title="What does it do?"></a>What does it do?</h1><ul><li>Latency and Fault Tolerance</li></ul><p>Stop cascading failures. Fallbacks and graceful degradation. Fail fast and rapid recovery.<br>Thread and semaphore isolation with circuit breakers.</p><ul><li><p>degradation,n. 退化；降格，降级；堕落</p></li><li><p>Realtime Operations</p></li></ul><p>Realtime monitoring and configuration changes. Watch service and property changes take effect immediately as they spread across a fleet.<br>Be alerted, make decisions, affect change and see results in seconds.</p><ul><li><p>fleet,adj. 快速的，敏捷的,n. 舰队；港湾；小河</p></li><li><p>Concurrency</p></li></ul><p>Parallel execution. Concurrency aware request caching. Automated batching through request collapsing.</p><h1 id="What-Is-Hystrix"><a href="#What-Is-Hystrix" class="headerlink" title="What Is Hystrix?"></a>What Is Hystrix?</h1><p> Hystrix is a library that helps you control the interactions between these distributed services by adding <em>latency tolerance and fault tolerance logic</em>. Hystrix does this by isolating points of access between the services, stopping cascading failures across them, and providing fallback options, all of which improve your system’s overall resiliency.</p><h1 id="What-Is-Hystrix-For"><a href="#What-Is-Hystrix-For" class="headerlink" title="What Is Hystrix For?"></a>What Is Hystrix For?</h1><ul><li>Give protection from and control over latency and failure from dependencies accessed (typically over the network) via third-party client libraries.</li><li>Stop cascading failures in a complex distributed system.</li><li>Fail fast and rapidly recover.</li><li>Fallback and gracefully degrade when possible.</li><li>Enable near real-time monitoring, alerting, and operational control.</li></ul><h1 id="What-Design-Principles-Underlie-Hystrix"><a href="#What-Design-Principles-Underlie-Hystrix" class="headerlink" title="What Design Principles Underlie Hystrix?"></a>What Design Principles Underlie Hystrix?</h1><ul><li>Preventing any single dependency from using up all container (such as Tomcat) user threads.</li><li>Shedding load and failing fast instead of queueing.</li><li>Providing fallbacks wherever feasible to protect users from failure.</li><li>Using isolation techniques (such as bulkhead, swimlane, and circuit breaker patterns) to limit the impact of any one dependency.</li><li>Optimizing for time-to-discovery through near real-time metrics, monitoring, and alerting</li><li>Optimizing for time-to-recovery by means of low latency propagation of configuration changes and support for dynamic property changes in most aspects of Hystrix, which allows you to make real-time operational modifications with low latency feedback loops.</li><li>Protecting against failures in the entire dependency client execution, not just in the network traffic.</li></ul><h1 id="How-Does-Hystrix-Accomplish-Its-Goals"><a href="#How-Does-Hystrix-Accomplish-Its-Goals" class="headerlink" title="How Does Hystrix Accomplish Its Goals?"></a>How Does Hystrix Accomplish Its Goals?</h1><ul><li>Wrapping all calls to external systems (or “dependencies”) in a HystrixCommand or HystrixObservableCommand object which typically executes within a separate thread (this is an example of the command pattern).</li><li>Timing-out calls that take longer than thresholds you define. There is a default, but for most dependencies you custom-set these timeouts by means of “properties” so that they are slightly higher than the measured 99.5th percentile performance for each dependency.</li><li>Maintaining a small thread-pool (or semaphore) for each dependency; if it becomes full, requests destined for that dependency will be immediately rejected instead of queued up.</li><li>Measuring successes, failures (exceptions thrown by client), timeouts, and thread rejections.</li><li>Tripping a circuit-breaker to stop all requests to a particular service for a period of time, either manually or automatically if the error percentage for the service passes a threshold.</li><li>Performing fallback logic when a request fails, is rejected, times-out, or short-circuits.</li><li>Monitoring metrics and configuration changes in near real-time.</li></ul><h1 id="How-It-Works"><a href="#How-It-Works" class="headerlink" title="How It Works?"></a>How It Works?</h1><p><img src="http://orkt468tj.bkt.clouddn.com/17-11-6/59429903.jpg" alt=""></p><h3 id="Construct-a-HystrixCommand-or-HystrixObservableCommand-Object"><a href="#Construct-a-HystrixCommand-or-HystrixObservableCommand-Object" class="headerlink" title="Construct a HystrixCommand or HystrixObservableCommand Object"></a>Construct a HystrixCommand or HystrixObservableCommand Object</h3><h3 id="Execute-the-Command"><a href="#Execute-the-Command" class="headerlink" title="Execute the Command"></a>Execute the Command</h3><ul><li>execute()-blocks, then returns the single response received from the dependency (or throws an exception in case of an error)</li><li>queue() - returns a Future with which you can obtain the single response from the dependency</li><li>observe() — subscribes to the Observable that represents the response(s) from the dependency and returns an Observable that replicates that source Observable</li><li>toObservable() — returns an Observable that, when you subscribe to it, will execute the Hystrix command and emit its responses</li></ul><p>使用舱壁模式（bulkhead pattern）将问题隔离在服务的级别。<br>组件要快速失效，而不是等到组件超时并破坏了应用实例后才失效。没有什么比迟迟收不到回应和一个无响应的UI更让人失望了。</p><p>为每一个服务设置一个超时时间，不是一个好方法。因为你基本上不能给出“好的”超时时间。这是个反模式，要避免。</p><p>使用依赖于对操作成功/失败的统计的断路器模式（circuit-breaker pattern）来代替使用超时时间。</p><h3 id="Reference-Links"><a href="#Reference-Links" class="headerlink" title="Reference Links"></a>Reference Links</h3><ul><li><a href="https://github.com/Netflix/Hystrix" target="_blank" rel="noopener">Hystrix GitHub</a></li><li></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Command-Pattern&quot;&gt;&lt;a href=&quot;#Command-Pattern&quot; class=&quot;headerlink&quot; title=&quot;Command Pattern&quot;&gt;&lt;/a&gt;Command Pattern&lt;/h1&gt;&lt;h2 id=&quot;概念&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
    
      <category term="Hystrix" scheme="http://chilam.me/tags/Hystrix/"/>
    
  </entry>
  
  <entry>
    <title>极限与函数</title>
    <link href="http://chilam.me/2017/10/23/maths-function/"/>
    <id>http://chilam.me/2017/10/23/maths-function/</id>
    <published>2017-10-23T02:52:05.000Z</published>
    <updated>2018-06-30T10:05:00.248Z</updated>
    
    <content type="html"><![CDATA[<script type="text/x-mathjax-config">MathJax.Hub.Config({  tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}});</script><script type="text/javascript" async src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js?config=TeX-MML-AM_CHTML"></script><p>初等数学的研究对象基本上不变的量，而高等数学的研究对象则是变动量。所谓函数的关系就是变量之间的依赖关系，极限方法则是研究变量的一种基本方法。</p><h1 id="第一节-映射与函数"><a href="#第一节-映射与函数" class="headerlink" title="第一节 映射与函数"></a>第一节 映射与函数</h1><h2 id="一、映射"><a href="#一、映射" class="headerlink" title="一、映射"></a>一、映射</h2><h3 id="1-概念"><a href="#1-概念" class="headerlink" title="1.概念"></a>1.概念</h3><p>定义 设X、Y是2个非空集合，如果存在一个法则f,使得X中的每一个元素x,按照法则f,在Y中有唯一确定的元素y与之对应，那么称f为从X到Y的映射，记作$$f:X\to Y$$<br>其中y称为元素x在映射f下的<strong>像</strong>,并记作f(x),即$y=f(x)$<br>而元素x称为元素y在映射f下的<strong>原像</strong>,集合X称为f的定义域，记作为$D_f$即$D_f=X$;<br>X中所有的元素的像锁组成的集合称为映射f的值域，记作$R_f$或f(X)即<br>$$R_f=f(X)=\{f(x)\mid x \ni X\}$$</p><p>从上述的定义中需要的注意的问题:</p><ul><li>构成一个映射必须具备以下3个要素,集合X,即定义域$D_f=X$,集合Y,即值域的范围：$R_f \subset Y$;对应法则f,使每个$x \in X$，都有唯一的确定的y=f(x)与之对应。</li><li>对每个$x \in X$,元素x的像y是唯一的;而对每个$y \in R_f$,元素的y的原像不一定是唯一的；映射f的值域$R_f$是Y的一个子集，即$R_f \subset Y$,不一定$R_f=Y$</li></ul><p>设f是集合X到集合Y的映射，若$R_f=Y$,即Y中的任一元素y都是X中某元素的像，则称f为X到Y上的映射或满射；若对X中任意2个不同的元素$X_1 \neq X_2$，他们的像$f(x_1) \neq f(x_2)$,则称f为X到Y的单射；若映射即是单射又是满射，则称f为一一映射。</p><h3 id="2-逆映射和复合映射"><a href="#2-逆映射和复合映射" class="headerlink" title="2.逆映射和复合映射"></a>2.逆映射和复合映射</h3><p>设f是X到Y的单射，则由定义，每个$y \in R_f$,有唯一的$x \subset X$，适合f(x)=y,可以定义一个从$R_f$到X的新映射g，即$$g:R_f \to X$$<br>对于每个$y\subset R_f$,规定g(y)=x，这个x满足f(x)=y，这个映射g称为f的逆映射，记作<br>$f^{-1}$,其定义域$D_f{^{-1}}=R_f$,值域$R_f{^{-1}}=X$.</p><p>设有2个映射<br>$$g:X\to Y_1,f:Y_2\to Z$$<br>其中$Y1 \subset Y2$,则由映射g和f可以定义一个从X到Z的对应法则，它将每个$x \in X$映射称$f[g(x)] \in Z$.显然这个对应的法则确定了一个从X到Z的映射，这个映射称为映射g和f构成的复合映射，记作$f\cdot g$,即$$f\cdot g:X\to Z,(f\cdot g)(x)=f[g(x)],x\in X$$.</p><h2 id="二、函数"><a href="#二、函数" class="headerlink" title="二、函数"></a>二、函数</h2><h3 id="1-函数的概念"><a href="#1-函数的概念" class="headerlink" title="1.函数的概念"></a>1.函数的概念</h3><p>定义 设数集$D\subset R$,则称映射$f:D\to R$为定义在D上的函数，通常简记为<br>$$y=f(x),x\in D$$<br>其中x为自变量，y为应变量，D为定义域，记作$D_f$,即$D_f=D$.</p><p>函数是从实数集到实数集的映射，其值域总在R内，因此构成函数的要素是：定义域$D_f$以及对应法则f.如果2个函数的定义域相同，对应法则也相同，那么这2个函数是相同的。</p><p>表示函数的主要方法有三种：表格法，图形法，解析法(公式法)。</p><p>其中图形法表示函数是基于函数图形的概念，即坐标平面的上的点。</p>]]></content>
    
    <summary type="html">
    
      极限与函数
    
    </summary>
    
    
      <category term="maths" scheme="http://chilam.me/tags/maths/"/>
    
  </entry>
  
  <entry>
    <title>using mathematics in markdown</title>
    <link href="http://chilam.me/2017/10/20/using-mathematics-markdown/"/>
    <id>http://chilam.me/2017/10/20/using-mathematics-markdown/</id>
    <published>2017-10-20T01:41:05.000Z</published>
    <updated>2018-06-30T10:05:00.264Z</updated>
    
    <content type="html"><![CDATA[<script type="text/javascript" async src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js?config=TeX-MML-AM_CHTML"></script><h2 id="mathjax"><a href="#mathjax" class="headerlink" title="mathjax"></a>mathjax</h2><p><a href="https://github.com/mathjax/MathJax" target="_blank" rel="noopener">mathjax GitHub</a><br><a href="http://docs.mathjax.org/en/latest/mathjax.html" target="_blank" rel="noopener">Document</a></p><h2 id="How-to-use-Mathjax-in-this-blog"><a href="#How-to-use-Mathjax-in-this-blog" class="headerlink" title="How to use Mathjax in this blog?"></a>How to use Mathjax in this blog?</h2><h3 id="Using-a-Content-Deleivery-Network-CND-in-markdown-file"><a href="#Using-a-Content-Deleivery-Network-CND-in-markdown-file" class="headerlink" title="Using a Content Deleivery Network(CND) in markdown file"></a>Using a Content Deleivery Network(CND) in markdown file</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js?config=TeX-MML-AM_CHTML"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Notes:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">The <span class="keyword">default</span> math delimiters are $$...$$ and \[...\] <span class="keyword">for</span> displayed mathematics, and \(...\) <span class="keyword">for</span> <span class="keyword">in</span>-line mathematics. Note <span class="keyword">in</span> particular that the $...$ <span class="keyword">in</span>-line delimiters are not used by <span class="keyword">default</span>. </span><br><span class="line">--------------------------------------------------------------</span><br><span class="line">&lt;script type=<span class="string">"text/x-mathjax-config"</span>&gt;</span><br><span class="line">MathJax.Hub.Config(&#123;</span><br><span class="line">  tex2jax: &#123;<span class="attr">inlineMath</span>: [[<span class="string">'$'</span>,<span class="string">'$'</span>], [<span class="string">'\\('</span>,<span class="string">'\\)'</span>]]&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">--------------------------------------------------------------</span></span><br></pre></td></tr></table></figure></p><h3 id="Putting-mathematics-in-a-markdown-file"><a href="#Putting-mathematics-in-a-markdown-file" class="headerlink" title="Putting mathematics in a markdown file"></a>Putting mathematics in a markdown file</h3><p>The default math delimiters are $$…$$ and […] for displayed mathematics, and (…) for in-line mathematics.</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">$</span><span class="symbol">$</span>x = &#123;-b \pm \<span class="built-in">sqrt</span>&#123;b^<span class="number">2</span><span class="number">-4</span>ac&#125; \over <span class="number">2</span>a&#125;.<span class="symbol">$</span><span class="symbol">$</span></span><br></pre></td></tr></table></figure><h2 id="LaTex-Symbols"><a href="#LaTex-Symbols" class="headerlink" title="LaTex Symbols"></a>LaTex Symbols</h2><p>Mathematics that is written in TeX or LaTeX format is indicated using math delimiters that surround the mathematics</p><p><a href="http://www.latexstudio.net/" target="_blank" rel="noopener">Reference</a></p><p><a href="https://artofproblemsolving.com/wiki/index.php/LaTeX:Symbols" target="_blank" rel="noopener">LaTeX:Symbols</a></p><table><thead><tr><th style="text-align:left">Symbol</th><th style="text-align:left">Command</th><th style="text-align:left">Symbol</th><th style="text-align:left">Command</th><th style="text-align:left">Symbol</th><th style="text-align:left">Command</th></tr></thead><tbody><tr><td style="text-align:left">$$+$$</td><td style="text-align:left">键盘+</td><td style="text-align:left">$$-$$</td><td style="text-align:left">键盘-</td><td style="text-align:left">$$\times$$</td><td style="text-align:left">\times</td></tr><tr><td style="text-align:left">$$\div$$</td><td style="text-align:left">\div</td><td style="text-align:left">$$=$$</td><td style="text-align:left">键盘=</td><td style="text-align:left">$$&gt;$$</td><td style="text-align:left">键盘&gt;</td></tr><tr><td style="text-align:left">$$&lt;$$</td><td style="text-align:left">键盘&lt;</td><td style="text-align:left">$$\ge$$</td><td style="text-align:left">\ge</td><td style="text-align:left">$$\le$$</td><td style="text-align:left">\le</td></tr><tr><td style="text-align:left">$$\neq$$</td><td style="text-align:left">\neq</td><td style="text-align:left">$$\approx$$</td><td style="text-align:left">\approx</td><td style="text-align:left">$$\sim$$</td><td style="text-align:left">\sim</td></tr><tr><td style="text-align:left">$$\subset$$</td><td style="text-align:left">\subset</td><td style="text-align:left">$$\supset$$</td><td style="text-align:left">\supset</td><td style="text-align:left">$$\subseteq$$</td><td style="text-align:left">\subseteq</td></tr><tr><td style="text-align:left">$$\propto$$</td><td style="text-align:left">\propto</td><td style="text-align:left">$$\bowtie$$</td><td style="text-align:left">\bowtie</td><td style="text-align:left">$$\subseteq$$</td><td style="text-align:left">\subseteq</td></tr><tr><td style="text-align:left">$$\S$$</td><td style="text-align:left">\S</td><td style="text-align:left">$$\ell$$</td><td style="text-align:left">\ell</td><td style="text-align:left">$$\partial$$</td><td style="text-align:left">\partial</td></tr></tbody></table><p>$$\overbrace{a_0+a_1+a_2+\cdots+a_n}^{x}$$</p><p>$$\left(\frac{a}{x} \right)^2$$</p><p>$$\int 2x\,dx = x^2+C$$</p><p>$$\frac{\partial^2U}{\partial x^2} + \frac{\partial^2U}{\partial y^2}$$</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script type=&quot;text/javascript&quot; async src=&quot;https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js?config=TeX-MML-AM_CHTML&quot;&gt;
&lt;/script
      
    
    </summary>
    
    
      <category term="markdown" scheme="http://chilam.me/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>siege</title>
    <link href="http://chilam.me/2017/09/24/siege/"/>
    <id>http://chilam.me/2017/09/24/siege/</id>
    <published>2017-09-24T14:24:28.000Z</published>
    <updated>2018-06-30T10:05:00.248Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Siege是一款开源的压力测试工具，设计用于评估WEB应用在压力下的承受能力。可以根据配置对一个WEB站点进行多用户的并发访问，记录每个用户所有请求过程的相应时间，并在一定数量的并发访问下重复进行。</p><blockquote><p>官网 <a href="https://www.joedog.org/" target="_blank" rel="noopener">https://www.joedog.org/</a></p></blockquote><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget http:<span class="comment">//www.joedog.org/pub/siege/siege-latest.tar.gz </span></span><br><span class="line">tar -zxvf siege-latest<span class="selector-class">.tar</span><span class="selector-class">.gz</span> </span><br><span class="line">cd siege-<span class="number">3.1</span>/ </span><br><span class="line">./configure </span><br><span class="line">make </span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h3 id="参数详解"><a href="#参数详解" class="headerlink" title="参数详解"></a>参数详解</h3><ol><li>-C,或–config 在屏幕上打印显示出当前的配置,配置是包括在他的配置文件$HOME/.siegerc中,可以编辑里面的参数,这样每次siege 都会按照它运行.</li><li>-v 运行时能看到详细的运行信息</li><li>-c n,或–concurrent=n 模拟有n个用户在同时访问,n不要设得太大,因为越大,siege 消耗本地机器的资源越多</li><li>-i,–internet 随机访问urls.txt中的url列表项,以此模拟真实的访问情况(随机性),当urls.txt存在是有效</li><li>-d n,–delay=n hit每个url之间的延迟,在0-n之间</li><li>-r n,–reps=n 重复运行测试n次,不能与 -t同时存在</li><li>-t n,–time=n 持续运行siege ‘n’秒(如10S),分钟(10M),小时(10H)</li><li>-l 运行结束,将统计数据保存到日志文件中siege .log,一般位于/usr/local/var/siege .log中,也可在.siegerc中自定义</li><li>-R SIEGERC,–rc=SIEGERC 指定用特定的siege 配置文件来运行,默认的为$HOME/.siegerc</li><li>-f FILE, –file=FILE 指定用特定的urls文件运行siege ,默认为urls.txt,位于siege 安装目录下的etc/urls.txt</li><li>-u URL,–url=URL 测试指定的一个URL,对它进行”siege “,此选项会忽略有关urls文件的设定</li></ol><h3 id="用法示例"><a href="#用法示例" class="headerlink" title="用法示例"></a>用法示例</h3><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="subst">@192</span> src]<span class="meta"># pwd</span></span><br><span class="line">/home/maxp/siege<span class="number">-4.0</span><span class="number">.4</span>/src</span><br><span class="line">[root<span class="subst">@192</span> src]<span class="meta"># ./siege -c100 -r2 http://192.168.192.1:8080/servlet-demo/notAsyncServl</span></span><br><span class="line"><span class="meta"># 结果示例</span></span><br><span class="line"><span class="symbol">Transactions:</span>                <span class="number">200</span> hits <span class="meta">#已完成事务总数</span></span><br><span class="line"><span class="symbol">Availability:</span>             <span class="number">100.00</span> % <span class="meta">#完成的成功率</span></span><br><span class="line">Elapsed time:              <span class="number">16.95</span> secs<span class="meta">#总共使用的时间</span></span><br><span class="line">Data transferred:           <span class="number">0.00</span> MB<span class="meta">#响应中的数据的总大小</span></span><br><span class="line">Response time:              <span class="number">8.30</span> secs<span class="meta">#显示网络连接的速度</span></span><br><span class="line">Transaction rate:          <span class="number">11.80</span> trans/<span class="keyword">sec</span><span class="meta">#平均每秒完成的事务总数</span></span><br><span class="line"><span class="symbol">Throughput:</span>             <span class="number">0.00</span> MB/<span class="keyword">sec</span><span class="meta">#平均每秒传送的数据量</span></span><br><span class="line"><span class="symbol">Concurrency:</span>               <span class="number">97.90</span><span class="meta">#实际最高并发链接数</span></span><br><span class="line">Successful transactions:         <span class="number">200</span><span class="meta">#成功处理次数</span></span><br><span class="line">Failed transactions:               <span class="number">0</span><span class="meta">#失败处理次数</span></span><br><span class="line">Longest transaction:            <span class="number">8.71</span><span class="meta">#最长完成事务处理时间</span></span><br><span class="line">Shortest transaction:           <span class="number">8.00</span><span class="meta">#最短完成事务处理时间</span></span><br></pre></td></tr></table></figure><h3 id="使用总结"><a href="#使用总结" class="headerlink" title="使用总结"></a>使用总结</h3><ul><li>发送post请求时，url格式为：<a href="http://www.xxxx.com/" target="_blank" rel="noopener">http://www.xxxx.com/</a> POST p1=v1&amp;p2=v2</li><li>如果url中含有空格和中文，要先进行url编码，否则siege发送的请求url不准确</li></ul>]]></content>
    
    <summary type="html">
    
      siege
    
    </summary>
    
    
      <category term="test" scheme="http://chilam.me/tags/test/"/>
    
  </entry>
  
  <entry>
    <title>java-selenium</title>
    <link href="http://chilam.me/2017/09/24/java-selenium/"/>
    <id>http://chilam.me/2017/09/24/java-selenium/</id>
    <published>2017-09-24T03:17:34.000Z</published>
    <updated>2018-06-30T10:05:00.248Z</updated>
    
    <content type="html"><![CDATA[<h2 id="selenium项目介绍"><a href="#selenium项目介绍" class="headerlink" title="selenium项目介绍"></a>selenium项目介绍</h2><p>自动化测试(详细的可以百度哈)</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">github</span>-&gt;</span>https:<span class="comment">//github.com/SeleniumHQ/selenium</span></span><br></pre></td></tr></table></figure><h2 id="基于FireFox的测试"><a href="#基于FireFox的测试" class="headerlink" title="基于FireFox的测试"></a>基于FireFox的测试</h2><h3 id="首先安装FireFox浏览器"><a href="#首先安装FireFox浏览器" class="headerlink" title="首先安装FireFox浏览器"></a>首先安装FireFox浏览器</h3><h3 id="FireFox驱动下载地址如下"><a href="#FireFox驱动下载地址如下" class="headerlink" title="FireFox驱动下载地址如下"></a>FireFox驱动下载地址如下</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//gi</span>thub.com<span class="regexp">/mozilla/g</span>eckodriver<span class="regexp">/release</span></span><br></pre></td></tr></table></figure><p>下载最新版的即可geckodriver-v0.19.0-win64.zip(windows操作系统的驱动)，解压文件出现geckodriver.exe</p><h3 id="测试代码"><a href="#测试代码" class="headerlink" title="测试代码"></a>测试代码</h3><ul><li>pom.xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.testng<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>testng<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.9.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.seleniumhq.selenium<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>selenium-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>使用示例</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> me.chilam.servlet;</span><br><span class="line"><span class="keyword">import</span> org.openqa.selenium.WebDriver;</span><br><span class="line"><span class="keyword">import</span> org.openqa.selenium.firefox.FirefoxDriver;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.Test;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestHelloServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDoGet</span><span class="params">()</span></span>&#123;</span><br><span class="line">       <span class="comment">//设置FireFox驱动的地址</span></span><br><span class="line">       System.setProperty(<span class="string">"webdriver.gecko.driver"</span>,<span class="string">"D:\\用户目录\\下载\\geckodriver-v0.19.0-win64\\geckodriver.exe"</span>);</span><br><span class="line">       WebDriver driver =<span class="keyword">new</span> FirefoxDriver();</span><br><span class="line">       <span class="comment">//请求地址</span></span><br><span class="line">       driver.get(<span class="string">"http://www.baidu.com/"</span>);</span><br><span class="line">       <span class="comment">//获取请求地址的title</span></span><br><span class="line">       System.err.println(<span class="string">"Page title is"</span>+driver.getTitle());</span><br><span class="line">       <span class="comment">//退出浏览器</span></span><br><span class="line">       driver.quit();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="基于IE11的测试"><a href="#基于IE11的测试" class="headerlink" title="基于IE11的测试"></a>基于IE11的测试</h2><h3 id="安装IE11"><a href="#安装IE11" class="headerlink" title="安装IE11"></a>安装IE11</h3><h3 id="下载IEDriver"><a href="#下载IEDriver" class="headerlink" title="下载IEDriver"></a>下载IEDriver</h3><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">下载地址：<span class="string">http:</span><span class="comment">//selenium-release.storage.googleapis.com/index.html</span></span><br></pre></td></tr></table></figure><p>IEDriverServer_x64_3.5.1.zip</p><h3 id="测试代码-1"><a href="#测试代码-1" class="headerlink" title="测试代码"></a>测试代码</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">System.setProperty(<span class="string">"webdriver.ie.driver"</span>,<span class="string">"D:<span class="subst">\\</span>用户目录<span class="subst">\\</span>下载<span class="subst">\\</span>IEDriverServer_x64_3.5.1<span class="subst">\\</span>IEDriverServer.exe"</span>);</span><br><span class="line">WebDriver driver = new InternetExplorerDriver();</span><br></pre></td></tr></table></figure><p>常见错误如下，取消设置IE的保护模式<br>Protected Mode settings are not the same for all zones. Enable Protected Mode must be set to the same value (enabled or disabled) for all zones.</p><h2 id="基于Chrome测试"><a href="#基于Chrome测试" class="headerlink" title="基于Chrome测试"></a>基于Chrome测试</h2><h3 id="驱动下载"><a href="#驱动下载" class="headerlink" title="驱动下载"></a>驱动下载</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span>npm.taobao.org<span class="regexp">/mirrors/</span>chromedriver<span class="regexp">/2.31/</span></span><br></pre></td></tr></table></figure><p>chromedriver_win32.zip</p><h3 id="测试代码-2"><a href="#测试代码-2" class="headerlink" title="测试代码"></a>测试代码</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">System.setProperty(<span class="string">"webdriver.chrome.driver"</span>,<span class="string">"D:<span class="subst">\\</span>用户目录<span class="subst">\\</span>下载<span class="subst">\\</span>chromedriver_win32<span class="subst">\\</span>chromedriver.exe"</span>);</span><br><span class="line">WebDriver driver = new ChromeDriver();</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>以上代码中System.property的时候，Google的驱动以及IE的驱动需要注意本地安装软件的版本，以及可以简化的System.property语句，只需要把浏览器的驱动拷贝到本地运行程序的jdk的bin目录就可以。</p><h3 id="本测试demo使用驱动下载地址"><a href="#本测试demo使用驱动下载地址" class="headerlink" title="本测试demo使用驱动下载地址"></a>本测试demo使用驱动下载地址</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//gi</span>thub.com<span class="regexp">/CasperMXP/</span>servlet-demo<span class="regexp">/tree/m</span>aster<span class="regexp">/src/m</span>ain<span class="regexp">/resources</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      浏览器自动化的测试
    
    </summary>
    
    
      <category term="test" scheme="http://chilam.me/tags/test/"/>
    
  </entry>
  
  <entry>
    <title>Servlet3.0</title>
    <link href="http://chilam.me/2017/09/21/servlet/"/>
    <id>http://chilam.me/2017/09/21/servlet/</id>
    <published>2017-09-21T01:57:22.000Z</published>
    <updated>2018-06-30T10:05:00.248Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Servlet3-0与web容器的支持情况"><a href="#Servlet3-0与web容器的支持情况" class="headerlink" title="Servlet3.0与web容器的支持情况"></a>Servlet3.0与web容器的支持情况</h2><h3 id="JavaEE"><a href="#JavaEE" class="headerlink" title="JavaEE"></a>JavaEE</h3><ul><li><a href="http://www.oracle.com/technetwork/cn/java/javaee/documentation/index.html" target="_blank" rel="noopener">JavaEE Document</a></li><li><a href="http://www.oracle.com/technetwork/java/javaee/tech/javaee5-jsp-135162.html?ssSourceSiteId=otncn" target="_blank" rel="noopener">JavaEE5 Document</a>(Servlet2.5)</li><li><a href="http://www.oracle.com/technetwork/java/javaee/tech/javaee6technologies-1955512.html?ssSourceSiteId=otncn" target="_blank" rel="noopener">JavaEE6 Document</a>(Servlet3.0)</li><li><a href="http://www.oracle.com/technetwork/java/javaee/tech/index.html" target="_blank" rel="noopener">JavaEE7 Document</a>(Servlet3.1)</li></ul><h3 id="Tomcat"><a href="#Tomcat" class="headerlink" title="Tomcat"></a><a href="http://tomcat.apache.org/whichversion.html" target="_blank" rel="noopener">Tomcat</a></h3><p><img src="http://orkt468tj.bkt.clouddn.com/17-9-21/26814947.jpg" alt=""></p><h3 id="Oracle-WebLogic"><a href="#Oracle-WebLogic" class="headerlink" title="Oracle WebLogic"></a><a href="http://www.oracle.com/technetwork/middleware/weblogic/downloads/wls-main-097127.html" target="_blank" rel="noopener">Oracle WebLogic</a></h3><ul><li>Oracle WebLogic Server 12c Release 2<ul><li><a href="http://www.oracle.com/technetwork/middleware/weblogic/downloads/index.html" target="_blank" rel="noopener">12.2.1.3.0</a>(Servlet3.1)</li><li>12.2.1.2.0</li><li>12.2.1.1.0</li><li>12.2.1</li></ul></li><li>Oracle WebLogic Server 12c Release 1<ul><li>12.1.3</li><li>12.1.2</li><li>12.1.1(Servlet3.0/JDK1.6.0.24)</li></ul></li><li>Oracle WebLogic Server 11g Release 1 <ul><li>10.3.6(Servlet2.5)</li></ul></li></ul><h2 id="Web-xml根元素定义"><a href="#Web-xml根元素定义" class="headerlink" title="Web.xml根元素定义"></a>Web.xml根元素定义</h2><p>不同版本Servlet版本定义在的web.xml文件的根元素不一样，详细请参考<a href="http://chilam.me/2017/08/10/web-xml/">web.xml根元素</a></p><h2 id="Servlet"><a href="#Servlet" class="headerlink" title="Servlet"></a>Servlet</h2><h3 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h3><ul><li>类的关系</li></ul><p><img src="http://orkt468tj.bkt.clouddn.com/17-9-21/90919684.jpg" alt="">    </p><ul><li>开发者在使用的时候一般继承javax.servlet.http.HttpServlet即可，如下代码所示</li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">HelloServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>常用的Http请求对应的处理方法</p><ul><li>doGet</li><li>doPost</li><li>service</li><li>实现代码如下：<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">HelloServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 处理HTTP GET请求</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doGet(<span class="type">HttpServletRequest</span> req, <span class="type">HttpServletResponse</span> resp) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        resp.getWriter().write(<span class="type">LocalTime</span>.now()+<span class="string">" doGet "</span>+ req.getRequestURI());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 处理HTTP POST请求</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doPost(<span class="type">HttpServletRequest</span> req, <span class="type">HttpServletResponse</span> resp) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        resp.getWriter().write(<span class="type">LocalTime</span>.now()+<span class="string">" doPost "</span>+ req.getRequestURI());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 处理HTTP任意请求，该方法一旦被重写后，请求将不在会进入doGet(),ddPost()方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void service(<span class="type">HttpServletRequest</span> req, <span class="type">HttpServletResponse</span> resp) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        resp.getWriter().write(<span class="type">LocalTime</span>.now()+<span class="string">" service "</span> +req.getRequestURI());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>xml配置详细解释</p></li></ul><p>### </p>]]></content>
    
    <summary type="html">
    
      web-fragment,@WebServlet,Java注册
    
    </summary>
    
    
      <category term="java" scheme="http://chilam.me/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>3.design-patter-observer</title>
    <link href="http://chilam.me/2017/09/13/design-pattern-3/"/>
    <id>http://chilam.me/2017/09/13/design-pattern-3/</id>
    <published>2017-09-13T11:41:21.000Z</published>
    <updated>2018-06-30T10:05:00.248Z</updated>
    
    <content type="html"><![CDATA[<h2 id="观察者模式"><a href="#观察者模式" class="headerlink" title="观察者模式"></a>观察者模式</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>某些事情发生的时候（比如状态发生改变），如果一个对象需要自动地通知其他多个对象。</p><h3 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h3><ul><li>一个观察者接口</li><li>多个观察者实现类</li><li>被观察者对象</li></ul><h3 id="示例代码-非lambda"><a href="#示例代码-非lambda" class="headerlink" title="示例代码-非lambda"></a>示例代码-非lambda</h3><ul><li>观察者接口及实现类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Observer</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">notify</span><span class="params">(String s)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NYTimes</span> <span class="keyword">implements</span> <span class="title">Observer</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">notify</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"NYTimes.notify"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LeMode</span> <span class="keyword">implements</span> <span class="title">Observer</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">notify</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"LeMode.notify"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>主题</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Subject</span> </span>&#123;</span><br><span class="line">    <span class="comment">//注册观察者</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">registerObserver</span><span class="params">(Observer observer)</span></span>;</span><br><span class="line">    <span class="comment">//通知观察者</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">notifyObsercers</span><span class="params">(String s)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ConcreteSubject</span> <span class="keyword">implements</span> <span class="title">Subject</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> List&lt;Observer&gt; observerList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">registerObserver</span><span class="params">(Observer observer)</span> </span>&#123;</span><br><span class="line">        observerList.add(observer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">notifyObsercers</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        observerList.forEach(observer -&gt; observer.notify(s));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ConcreteSubject concreteSubject = <span class="keyword">new</span> ConcreteSubject();</span><br><span class="line">        concreteSubject.registerObserver(<span class="keyword">new</span> NYTimes());</span><br><span class="line">        concreteSubject.registerObserver(<span class="keyword">new</span> LeMode());</span><br><span class="line">        concreteSubject.notifyObsercers(<span class="string">"sss"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      观察者设计模式
    
    </summary>
    
      <category term="搬砖" scheme="http://chilam.me/categories/%E6%90%AC%E7%A0%96/"/>
    
    
      <category term="design-pattern" scheme="http://chilam.me/tags/design-pattern/"/>
    
  </entry>
  
</feed>
